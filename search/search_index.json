{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u642d\u5efa\u8fd9\u4e2a\u7b14\u8bb0</p> <ol> <li>\u8bb0\u5f55\u4e0b\u81ea\u5df1\u7684\u5b66\u4e60\u8fc7\u7a0b\u548c\u90e8\u5206\u7ecf\u5386\uff0c\u5f53\u4f5c\u662f\u7ed9\u672a\u6765\u7684\u81ea\u5df1\u4e00\u4efd\u793c\u7269\u5427\u3002</li> <li>\u6839\u636e\u8d39\u66fc\u5b66\u4e60\u6cd5\uff0c\u5982\u679c\u4e0d\u80fd\u6e05\u6670\u5730\u8868\u8fbe\u51fa\u6765\uff0c\u8bf4\u660e\u81ea\u5df1\u5e76\u6ca1\u6709\u771f\u6b63\u5730\u7406\u89e3\u3002</li> <li>\u6574\u7406\u51fa\u8981\u70b9\u548c\u76f2\u70b9\uff0c\u53cd\u590d\u7ec3\u4e60\u52a0\u6df1\u5370\u8c61\u3002</li> </ol> <p>Quote</p> <p>\u77e5\u8bc6\u7684\u654c\u4eba\u4e0d\u662f\u65e0\u77e5\uff0c\u800c\u662f\u5df2\u7ecf\u638c\u63e1\u77e5\u8bc6\u7684\u5e7b\u89c9\u3002</p> <pre><code>                                       Retention rate\n           +            .\n           |         lecture              5%\n           |           ...\npassive    |         reading             10%\n           |          .....\nlearning   |       audiovisual           20%\n           |         .......\n           +      demonstration          30%\n                    .........\n           +        discussion           50%\nactive     |      .............\n           |      practice doing         75%\nlearning   |    .................\n           |       teach others          90%\n           + .......................\n</code></pre> <p>\u4ec0\u4e48\u662f\u8d39\u66fc\u5b66\u4e60\u6cd5</p> <ol> <li>\u9009\u62e9\u4f60\u8981\u5b66\u4e60\u7684\u77e5\u8bc6\u70b9\uff0c\u5148\u81ea\u5b66\u3002</li> <li>\u9488\u5bf9\u4e0a\u9762\u7684\u77e5\u8bc6\u70b9\uff0c\u5728\u7eb8\u4e0a\u5199\u4e0b\u4f60\u5df2\u7ecf\u4e86\u89e3\u7684\u4e00\u5207\uff0c\u5e76\u5047\u88c5\u8981\u8bb2\u7ed9\u4e00\u4e2a\u5b69\u5b50\u542c\u3002</li> <li>\u5982\u679c\u53d1\u73b0\u6709\u54ea\u91cc\u89e3\u91ca\u4e0d\u6e05\u695a\uff0c\u771f\u6b63\u7684\u5b66\u4e60\u5f00\u59cb\u4e86\uff01\u7528\u4e00\u5207\u65b9\u6cd5\u586b\u8865\u77e5\u8bc6\u76f2\u533a\uff0c\u76f4\u5230\u4f60\u80fd\u7528\u5927\u767d\u8bdd\u628a\u5b83\u8bf4\u6e05\u695a\u3002</li> <li>\u73b0\u5728\u4f60\u7684\u4e86\u89e3\u66f4\u5168\u9762\u4e86\uff0c\u66f4\u65b0\u4f60\u7684\u8ba4\u77e5\u3002\u518d\u7528\u66f4\u901a\u4fd7\u6613\u61c2\u7684\u65b9\u5f0f\u63cf\u8ff0\u5b83\u4eec\u3002</li> </ol>"},{"location":"changelog/","title":"\u7ef4\u62a4\u8bb0\u5f55","text":"<p>2023-11-29 \u4fee\u590d\u914d\u7f6e\u5b57\u6bb5\u5c06\u8981\u4e0d\u517c\u5bb9\u7684\u8b66\u544a\u4fe1\u606f</p> <p>2023-11-23 \u642d\u5efa\u7ad9\u70b9</p>"},{"location":"cs/","title":"Index","text":""},{"location":"cs/algo/","title":"Index","text":""},{"location":"cs/course/","title":"Index","text":""},{"location":"cs/essay/0002/","title":"SVN \u4f7f\u7528","text":""},{"location":"cs/essay/0002/#_1","title":"\u7b80\u4ecb","text":"<p>SVN \u670d\u52a1\u5c5e\u4e8e IO \u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u4e14\u76f8\u6bd4\u4e8e Git\uff0c\u66f4\u9002\u5408\u4e8e\u9891\u7e41\u8fdb\u884c\u5927\u578b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5b58\u53d6\u3002\u5176\u5185\u5b58\u5360\u7528\u6781\u4f4e\uff0c\u4ece\u81ea\u642d\u5efa\u60c5\u51b5\u770b\uff0c\u4e00\u822c\u5728 3MB \u5de6\u53f3\uff0c\u5cf0\u503c\u4f20\u8f93 20MB \u5de6\u53f3\u3002</p>"},{"location":"cs/essay/0002/#server-with-docker","title":"Server with docker","text":"<ol> <li>\u5b89\u88c5\u670d\u52a1 <code>docker compose up -d</code></li> </ol> <pre><code># docker-compose.yaml\nversion: '3.3'\nservices:\n    svn-server:\n    image: garethflowers/svn-server\n    container_name: svn-server\n    volumes:\n      - '/svn:/var/opt/svn'\n    ports:\n      - '3690:3690'\n</code></pre> <ol> <li> <p>\u751f\u6210\u4ed3\u5e93 <code>docker exec -it svn-server svnadmin create repo</code></p> </li> <li> <p>\u914d\u7f6e \u4ed3\u5e93\u8d26\u6237\u6587\u4ef6\u4f4d\u4e8e <code>^/repo/conf/{svnserver.conf passwd authz}</code></p> </li> </ol> <pre><code># svnserver.conf\nanon-access = none     # \u975e\u6ce8\u518c\u7528\u6237\u6743\u9650\nauth-access = write    # \u6ce8\u518c\u7528\u6237\u6743\u9650\npassword-db = passwd   # \u5bc6\u7801\u6587\u4ef6\u8def\u5f84\nauthz-db = authz       # \u6743\u9650\u6587\u4ef6\u8def\u5f84\n</code></pre> <pre><code># passwd\nuser = password        # \u586b\u5199\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\n</code></pre> <pre><code># authz\n[repo:/path]\nuser = rw              # \u8bbe\u7f6e\u7528\u6237\u540d\u62e5\u6709\u7684\u4ed3\u5e93\u8def\u5f84\u6743\u9650\n</code></pre>"},{"location":"cs/essay/0002/#client","title":"Client","text":"<ol> <li>\u5b89\u88c5\u5ba2\u6237\u7aef <code>sudo pacman -S subversion</code></li> <li>\u62c9\u53d6\u670d\u52a1\u7aef\u4ed3\u5e93 <code>svn checkout svn://path</code></li> <li>\u5176\u4f59\u547d\u4ee4\u7528\u5230\u518d\u67e5 <code>svn -h</code> </li> </ol>"},{"location":"cs/essay/0004/","title":"C/C++ \u7a0b\u5e8f\u95ee\u9898\u5b9a\u4f4d","text":"<p>c/c++ \u53ef\u4f7f\u7528\u68c0\u6d4b\u5de5\u5177<code>asan</code> <code>valgrind</code>\u5b9a\u4f4d\u7a0b\u5e8f\u95ee\u9898\u3002\u4e00\u822c\u7684\u68c0\u67e5\uff0casan \u6bd4 valgrind \u66f4\u5feb\uff0c\u7ed3\u679c\u66f4\u7cbe\u786e\uff0c\u7ecf\u8fc7 <code>time</code> \u6d4b\u8bd5\uff0casan \u6d88\u8017\u65f6\u95f4\u662f valgrind \u7684 1/30\u3002</p>"},{"location":"cs/essay/0004/#_1","title":"\u7248\u672c\u73af\u5883","text":"<ul> <li>valgrind\uff083.21.0\uff09</li> <li>gcc(13.1.1)</li> </ul>"},{"location":"cs/essay/0004/#_2","title":"\u7528\u6cd5","text":"<ul> <li>Sanitizer \u7f16\u8bd1\u65f6\u9644\u5e26 <code>-fsanitize=address -g</code> \u76f4\u63a5\u6267\u884c\u7a0b\u5e8f</li> <li>Valgrind  \u7f16\u8bd1\u65f6\u9644\u5e26 <code>-g</code> \u4f7f\u7528 Valgrind \u6267\u884c\u7a0b\u5e8f <code>valgrind --tool=memcheck --leak-check=full ./a.out</code></li> </ul>"},{"location":"cs/essay/0004/#_3","title":"\u89e6\u53d1\u7c7b\u578b","text":""},{"location":"cs/essay/0004/#_4","title":"\u5185\u5b58\u95ee\u9898","text":"<ul> <li> <p>memory leak</p> <pre><code>char *str = (char *)malloc(100 * sizeof(char));\nstrcpy(str, \"Hello Leak!\");\nprintf(\"%s\\n\", str);\n/** leak here */\nreturn 0;\n</code></pre> </li> <li> <p>double free</p> <pre><code>char *str = (char *)malloc(100 * sizeof(char));\nfree(str);\n/** double free */\nfree(str);\nreturn 0;\n</code></pre> </li> <li> <p>use after free</p> <pre><code>char *str = (char *)malloc(100 * sizeof(char));\nfree(str);\n/** use after free */\nstrcpy(str, \"Hello Leak!\");\nprintf(\"%s\\n\", str);\nreturn 0;\n</code></pre> </li> <li> <p>heap buffer overflow</p> <pre><code>char *str = (char *)malloc(sizeof(char) * 12);\n/* heap-buffer-overflow */\nstrcpy(str, \"Hello World!\");\nprintf(\"string is :%s\\n\", str);\nfree(str);\nreturn 0;\n</code></pre> </li> <li> <p>stack buffer overflow</p> <pre><code>char str[100] = {1};\n/** stack-buffer-overflow */\nstr[101] = 1;\nreturn 0;\n</code></pre> </li> <li> <p>global buffer overflow</p> <pre><code>int array[100] = {-1};\n\nint main()\n{\n    /* global-buffer-overflow */\n    array[101] = 1;\n    return 0;\n}\n</code></pre> </li> <li> <p>alloc/dealloc mismatch</p> <pre><code>int main()\n{\n    char *str = new char[100];\n    /** alloc-dealloc-mismatch*/  \n    delete str;\n\n    return 0;\n}\n</code></pre> </li> </ul> <p>sanitizer \u7ed9\u51fa\u7684\u4fe1\u606f\u6bd4\u8f83\u76f4\u89c2\uff0c\u5982 memory leak \u7684\u6267\u884c\u4fe1\u606f\uff08\u7c7b\u578b\u3001\u884c\u6570\u3001\u5f71\u54cd\uff09\uff1a</p> <pre><code>Hello Leak!\n\n=================================================================\n==212706==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 100 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6aa04e1359 in __interceptor_malloc \n                    /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\n    #1 0x55c93274c1aa in main \n                ***************************/leak.c:7\n    #2 0x7f6aa023984f  (/usr/lib/libc.so.6+0x2384f) (BuildId: ****)\n\nSUMMARY: AddressSanitizer: 100 byte(s) leaked in 1 allocation(s).\n</code></pre>"},{"location":"cs/essay/0004/#_5","title":"\u7ebf\u7a0b\u95ee\u9898\uff08\u9644\u5e26\u6d4b\u8bd5\uff09","text":"<p>\u591a\u7ebf\u7a0b\u573a\u666f\u4e0b\u5e38\u89c1\u7684\u9519\u8bef</p> <ul> <li> <p>data race</p> <pre><code>int g_var;\n\nvoid* thread1(void *arg)\n{\n    ...\n    g_var++;\n    ...\n}\n\nvoid* thread2(void *arg)\n{\n    ...\n    g_var++;\n    ...\n}\n</code></pre> </li> <li> <p>dead lock</p> <pre><code>pthread_mutex_t mutex_a, mutex_b;\npthread_barrier_t barrier;\n\nvoid* lock_a(void *arg)\n{\n    pthread_mutex_lock(&amp;mutex_a);\n    {\n        pthread_barrier_wait(&amp;barrier);\n\n        pthread_mutex_lock(&amp;mutex_b);  /* \u7b49\u5f85 lock_b \u91ca\u653e*/\n        pthread_mutex_unlock(&amp;mutex_b);        \n    }\n    pthread_mutex_unlock(&amp;mutex_a);\n}\n\nvoid* lock_b(void *arg)\n{\n    pthread_mutex_lock(&amp;mutex_b);\n    {\n        pthread_barrier_wait(&amp;barrier);\n\n        pthread_mutex_lock(&amp;mutex_a);  /* \u7b49\u5f85 lock_a \u91ca\u653e */\n        pthread_mutex_unlock(&amp;mutex_a);        \n    }\n    pthread_mutex_unlock(&amp;mutex_b);\n}\n</code></pre> </li> </ul> <p>data race \u65b9\u9762\uff0ctsan \u76f8\u6bd4 valgrind \u7ed3\u679c\u57fa\u672c\u4e00\u81f4\uff0c\u4f46\u901f\u5ea6\u5b8c\u80dc\u3002</p> <p>dead lock \u65b9\u9762\uff0cvalgrind \u80fd\u68c0\u6d4b\u51fa\u7ebf\u7a0b\u9000\u51fa\u672a\u89e3\u9501\u5bfc\u81f4\u7684\u6b7b\u9501\uff0c\u5bf9\u76f8\u4e92\u6b7b\u9501\u6ca1\u6709\u529e\u6cd5\uff0ctsan \u5bf9\u6b7b\u9501\u5b8c\u5168\u6ca1\u6709\u529e\u6cd5\u3002</p>"},{"location":"cs/essay/0004/#_6","title":"\u60f3\u6cd5","text":"<p>\u6bd4\u6392\u67e5\u624b\u6bb5\u66f4\u91cd\u8981\u7684\u662f\u6392\u67e5\u601d\u8def\u3002\u7ebf\u4e0a\u7684\u73af\u5883\u4e0d\u6bd4\u751f\u4ea7\u73af\u5883\u5de5\u5177\u9f50\u5168\uff0c\u8fd8\u6709\u7740\u79cd\u79cd\u7ea6\u675f\uff08\u8bbf\u95ee\u65f6\u6bb5\u9650\u5236\uff0c\u670d\u52a1\u542f\u505c\u9650\u5236\u7b49\uff09\u589e\u52a0\u6210\u672c\u3002\u4fdd\u6301\u601d\u8def\u6e05\u6670\uff0c\u901a\u8fc7\u670d\u52a1\u65e5\u5fd7\u3001\u7cfb\u7edf\u8bb0\u5f55\u4fe1\u606f\u5bfb\u627e\u5173\u952e\u70b9\uff0c\u66f4\u8003\u9a8c\u5bf9\u7cfb\u7edf\u7684\u6574\u4f53\u4e86\u89e3\u7a0b\u5ea6\u3002</p> <p>\u6bd4\u6392\u67e5\u601d\u8def\u66f4\u63a5\u8fd1\u95ee\u9898\u6e90\u5934\u7684\u5c31\u662f\u8bbe\u8ba1\u601d\u8def\u4e86\u2026\u2026</p>"},{"location":"cs/essay/0004/#_7","title":"\u53c2\u8003","text":"<ul> <li>Sanitizers</li> </ul>"},{"location":"cs/essay/0005/","title":"\u81ea\u6258\u7ba1\u670d\u52a1 SSL \u52a0\u5bc6","text":""},{"location":"cs/essay/0005/#_1","title":"\u7ed3\u6784\u56fe","text":""},{"location":"cs/essay/0005/#_2","title":"\u57fa\u7840\u70b9","text":"<ol> <li>\u5bb9\u5668\u53ef\u4ee5\u52a0\u5165\u540c\u4e00\u4e2a\u7f51\u7edc\u4e2d\uff0c\u5e76\u901a\u8fc7\u5bb9\u5668\u540d\u76f8\u4e92\u901a\u4fe1</li> <li>\u547d\u4ee4\u884c\u4e0b\u7a0b\u5e8f\u4e0e\u7528\u6237\u7684\u4ea4\u4e92\u53ef\u4ee5\u7528 expect \u811a\u672c\u81ea\u52a8\u5316\u63a7\u5236</li> </ol>"},{"location":"cs/essay/0005/#_3","title":"\u6b65\u9aa4","text":""},{"location":"cs/essay/0005/#1","title":"1. \u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66","text":"<pre><code>openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365\n</code></pre>"},{"location":"cs/essay/0005/#2-nginxconf","title":"2. \u914d\u7f6e nginx.conf","text":"<p>\u6307\u5b9a\u8bc1\u4e66\uff0c\u5e76\u8bbe\u7f6e\u4ee3\u7406\u8f6c\u53d1</p> <pre><code>    server {\n        listen       11443 ssl;\n        server_name  localhost;\n\n        ssl_certificate       /usr/local/nginx/certs/cert.pem;\n        ssl_certificate_key   /usr/local/nginx/certs/key.pem;\n\n        location / {\n            proxy_set_header  Host              $http_host;\n            proxy_set_header  X-Real-IP         $remote_addr;\n            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\n\n            proxy_pass http://web:80;\n        }\n        # ......\n    }\n    # server { # \u65b0\u589e Web \u670d\u52a1\n    #    ...\n    # }\n</code></pre>"},{"location":"cs/essay/0005/#3-expect","title":"3. expect \u811a\u672c","text":"<p>\u8f93\u5165\u542f\u52a8\u65f6\u7684\u8bc1\u4e66\u5bc6\u7801\uff0c\u8fd9\u4e00\u6b65\u5176\u5b9e\u5e76\u4e0d\u5b89\u5168\uff0c\u5b8c\u5168\u662f\u4e3a\u4e86\u7b80\u5316\u64cd\u4f5c\u6b65\u9aa4\u3002</p> <pre><code># pem.expect\n#!/usr/bin/expect\n\nset timeout 30\nset password \"123456\"\n\nspawn /usr/local/nginx/sbin/nginx\n\nexpect {\n    \"PEM\" { send \"$password\\r\"; exp_continue } # \u591a\u4e2a\u4f7f\u7528 SSL \u7684\u670d\u52a1\u9700\u8981\u91cd\u590d send \u591a\u6b21\n    eof\n}\n</code></pre>"},{"location":"cs/essay/0005/#4-nginx","title":"4. \u7f16\u8bd1\u751f\u6210 nginx \u955c\u50cf","text":"<p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528 dockerhub \u91cc\u73b0\u6210\u7684\u955c\u50cf\uff0c\u4e0d\u8fc7\u6253\u7b97\u6709\u7a7a\u8bfb\u8bfb\u6e90\u7801\uff0c\u5148\u719f\u6089\u4e0b\u8fc7\u7a0b</p> <p><code>docker build -t nginx-proxy .</code></p> <pre><code>FROM ubuntu\nWORKDIR /code\n\n# ubuntu \u66ff\u6362\u955c\u50cf\u6e90\nRUN sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\\n    &amp;&amp; sed -i s@/security.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\\n    &amp;&amp; apt-get clean &amp;&amp; apt-get update -y\n\n# \u7f16\u8bd1 nginx \u7684\u5e93 &amp; \u5de5\u5177\nRUN apt-get install gcc make libz-dev libpcre3-dev libssl-dev expect wget -y\n\n# \u7f16\u8bd1 nginx\nRUN wget http://nginx.org/download/nginx-1.24.0.tar.gz \\\n    &amp;&amp; tar xf ./nginx-1.24.0.tar.gz &amp;&amp; cd ./nginx-1.24.0 \\\n    &amp;&amp; ./configure --prefix=/usr/local/nginx --with-http_ssl_module  \\\n    &amp;&amp; make &amp;&amp; make install\n</code></pre>"},{"location":"cs/essay/0005/#5-compose","title":"5. compose \u90e8\u7f72","text":"<p>\u521b\u5efa\u4e92\u8054\u7f51\u7edc <code>docker network create ngx-net</code></p> <pre><code>  version: '3'\n  # \u5185\u90e8\u76d1\u542c\u7aef\u53e3 80  \n  web:\n    image: python:3.7-alpine\n    container_name: web\n    restart: always\n    networks:\n      - ngx-net\n    tty: true\n</code></pre> <pre><code>version: '3'\n\nservices:\n  nginx:\n    image: nginx-proxy:latest\n    container_name: nginx-proxy\n    networks:\n      - ngx-net\n    volumes:\n      - ngx/certs:/usr/local/nginx/certs # \u5b58\u653e\u6b65\u9aa41 pem \u8bc1\u4e66\n      - ngx/conf:/usr/local/nginx/conf   # \u5b58\u653e\u6b65\u9aa42 conf \u6587\u4ef6\n      - ngx/sbin:/usr/local/nginx/sbin   # \u5b58\u653e\u6b65\u9aa43 expect \u811a\u672c\n    ports:\n      - 11443:11443\n    tty: true\n</code></pre>"},{"location":"cs/essay/0005/#6","title":"6. \u542f\u52a8","text":"<pre><code>$ docker compose up -d\n$ docker exec -it nginx-proxy expect pem.expect\n</code></pre>"},{"location":"cs/essay/0005/#_4","title":"\u603b\u7ed3","text":"<p>\u5bb9\u5668\u9694\u79bb\u4e86\u73af\u5883\uff0c\u590d\u6742\u5ea6\u4e00\u90e8\u5206\u8f6c\u79fb\u5230\u4e86\u90e8\u7f72\u5c42\u9762\u4e0a\u3002</p> <p>\u81ea\u7b7e\u540d\u8bc1\u4e66\u4e00\u822c\u591a\u7528\u4e8e\u81ea\u55e8\uff0c\u4e0d\u5c5e\u4e8e\u6b63\u89c4\u6d41\u6d3e\uff0c\u5e94\u7528\u573a\u666f\u4e0d\u5927\u3002</p> <p>dockerfile \u548c compose \u8fd8\u771f\u662f\u65b9\u4fbf\u3002</p>"},{"location":"cs/essay/0006/","title":"\u865a\u62df\u7f51\u7edc\u63a5\u53e3","text":""},{"location":"cs/essay/0006/#_2","title":"\u539f\u7406","text":"<pre><code>+---------------+         +---------------+         +---------------+\n| application A |         | application B |         | application C |\n+-------^-------+         +-------+-------+         +-------+-------+       user-mode\n        |                         |                         |\n+-----------------------------------------------------------------------------------+\n        |                         |                         |\n        |                 +-------v-------------------------v-------+     kernel-mode\n        |                 |               layer socket              |\n        |                 +--------------------^--------------------+\n        |                                      |\n        |                 +--------------------v--------------------+\n        |                 |              TCP/IP stack               |\n        |                 +--------^-----------------------^--------+\n        |                          |                       |\n+-------v-------+         +--------v--------+     +--------v--------+\n| /dev/net/tun  |         | Drivers for     |     | Drivers for     |\n|   char drivers|         |    virtual NIC  |     |   pysical NIC   |\n+-------^-------+         +--------^--------+     +--------^--------+\n        |                          |                       |\n        |                 +--------v--------+     +--------v--------+\n        |        (tun tap)|    virtual NIC  |     |   pysical NIC   |\n        |                 +--------^--------+     +--------^--------+\n        |                          |                       |\n        |                          |                       |\n        +--------------------------+                       |\n                                                           |\n+-----------------------------------------------------------------------------------+\n                                                           |\n                                      +--------------+     |\n                                      |   Internet   &lt;-----+\n                                      +--------------+\n</code></pre>"},{"location":"cs/essay/0006/#_3","title":"\u5b9e\u8df5","text":""},{"location":"cs/essay/0006/#code","title":"code","text":"<pre><code>#include &lt;linux/if.h&gt;\n#include &lt;linux/if_tun.h&gt;\n#include &lt;sys/ioctl.h&gt;\n\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n\nint tun_alloc(char *dev, int flags)\n{\n    struct ifreq ifr;\n    int fd, err;\n    char *clonedev = \"/dev/net/tun\";\n\n    /* \u6253\u5f00 /dev/net/tun */\n    if ((fd = open(clonedev, O_RDWR)) &lt; 0) {\n        return fd;\n    }\n\n    memset(&amp;ifr, 0, sizeof(ifr));\n    ifr.ifr_flags = flags;\n\n    /* \u672a\u6307\u5b9a\u8bbe\u5907\u540d\u79f0\u65f6\uff0c\u7531\u5185\u6838\u5206\u914d\u8bbe\u5907\u540d */\n    if (*dev) {\n        strncpy(ifr.ifr_name, dev, IFNAMSIZ);\n    }\n\n    /* \u901a\u8fc7 ioctl() \u5411\u5185\u6838\u6ce8\u518c\u7f51\u7edc\u8bbe\u5907\uff0c\u5b8c\u6210\u521b\u5efa\u865a\u62df\u63a5\u53e3\n     * \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u5173\u8054\uff0c\u4e0e\u63a5\u53e3\u901a\u4fe1 */\n    if ( (err = ioctl(fd, TUNSETIFF, (void *)&amp;ifr)) &lt; 0) {\n        close(fd);\n        return err;\n    }\n\n    //strcpy(dev, ifr.ifr_name); // this line leads to errors.\n\n    return fd;\n}\n\n\nint main()\n{\n    int fd, nread;\n    char buffer[1500];\n\n    if ((fd = tun_alloc(NULL, IFF_TUN | IFF_NO_PI)) &lt; 0) {\n        printf(\"tun alloc failed!\\n\");\n        exit(1);\n    }\n\n    while (1) {\n        if ( (nread = read(fd, buffer, sizeof(buffer))) &lt; 0) {\n            printf(\"read failed!\\n\");\n            close(fd);\n            exit(1);\n        }\n\n        /* process packets here */\n    }\n\n    /* \u7a0b\u5e8f\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u7f51\u7edc\u8bbe\u5907\u548c\u6240\u6709\u76f8\u5e94\u7684\u8def\u7ebf\u5c06\u4f1a\u6d88\u5931 */\n    return 0;\n}\n</code></pre>"},{"location":"cs/essay/0006/#compile-run","title":"compile &amp; run","text":"<pre><code>$ gcc tun.c -o tun\n$ ./tun\n\n# open another window\n$ ip addr add 10.0.0.1/24 dev tun0\n$ ip link set tun0 up\n\n# test packet acceptance\n$ ping 10.0.0.2\nPING 10.0.0.2 (10.0.0.2) 56(84) bytes of data.\n64 bytes from 10.0.0.2: icmp_seq=1 ttl=64 time=0.024 ms\n64 bytes from 10.0.0.2: icmp_seq=2 ttl=64 time=0.035 ms\n...\n</code></pre>"},{"location":"cs/essay/0006/#_4","title":"\u53c2\u8003","text":"<ul> <li> <p>Tun/Tap interface tutorial</p> </li> <li> <p>Documentation/networking/tuntap.txt</p> </li> <li>net/tun.c</li> </ul>"},{"location":"cs/essay/0007/","title":"Doxygen \u751f\u6210\u6587\u6863","text":""},{"location":"cs/essay/0007/#_1","title":"\u4f7f\u7528\u6d41\u7a0b","text":""},{"location":"cs/essay/0007/#1","title":"1. \u751f\u6210\u914d\u7f6e","text":"<pre><code>$ doxygen -g Doxyfile.in\n</code></pre>"},{"location":"cs/essay/0007/#2","title":"2. \u4fee\u6539\u914d\u7f6e","text":"<p>\u6839\u636e\u9700\u8981\u4fee\u6539 Doxyfile.in \u91cc\u7684\u9009\u9879\uff0c\u4e0d\u8fc7\u76f4\u63a5\u57fa\u4e8e\u4e0b\u9762\u8fd9\u4efd\u4fee\u6539\u4e5f\u4e0d\u9519\u3002</p> <pre><code># Project related configuration options\nDOXYFILE_ENCODING      = UTF-8\nPROJECT_NAME           = \"My Project\"\nPROJECT_NUMBER         = v0.1.0\nPROJECT_BRIEF          = \"a research project\"\nPROJECT_LOGO           =\nOUTPUT_DIRECTORY       = doc\nALLOW_UNICODE_NAMES    = NO\nOUTPUT_LANGUAGE        = English\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# Build related configuration options\nEXTRACT_ALL            = YES\nEXTRACT_STATIC         = YES\n\n# Configuration options related to the input files\nINPUT                  = @PROJECT_SOURCE_DIR@\nFILE_PATTERNS          = *.c *.h\nRECURSIVE              = YES \nEXCLUDE                = @PROJECT_SOURCE_DIR@/etc @PROJECT_SOURCE_DIR@/build \nUSE_MDFILE_AS_MAINPAGE = @PROJECT_SOURCE_DIR@/README.md\n\n# Configuration options related to the LaTeX output\nGENERATE_LATEX         = NO\n\n# Configuration options related to the HTML output\nGENERATE_TREEVIEW      = YES\n\n# Configuration options related to diagram generator tools\nHAVE_DOT               = YES\nUML_LOOK               = YES\nCALL_GRAPH             = YES\nCALLER_GRAPH           = YES\nDOT_IMAGE_FORMAT       = svg\nINTERACTIVE_SVG        = YES\n</code></pre>"},{"location":"cs/essay/0007/#3-cmake","title":"3. \u96c6\u6210\u5230 CMake","text":"<pre><code># doxygen.cmake\n\nfind_package (Doxygen)\n\nif (DOXYGEN_FOUND)\n        message(\"-- -- Create and Install the HTML based API document\")\n\n        set(DOXYFILE_IN ${PROJECT_SOURCE_DIR}/Doxyfile.in)\n        set(DOXYFILE    ${PROJECT_BINARY_DIR}/Doxyfile)\n\n        configure_file (${DOXYFILE_IN} ${DOXYFILE} @ONLY)\n        # make doc\n        add_custom_target (doc # ALL \n                    COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE}\n                    WORKING_DIRECTORY ${PROJECT_BINARY_DIR}\n                    COMMENT \"Generate docs using Doxygen\" VERBATIM)\nendif ()\n</code></pre> <pre><code># CMakeLists.txt\n\ninclude(doxygen.cmake)\n</code></pre>"},{"location":"cs/essay/0007/#4-doxygen","title":"4. Doxygen \u6ce8\u91ca\u98ce\u683c","text":"<p>Doxygen \u652f\u6301\u591a\u79cd\u8bc4\u8bba\u98ce\u683c\uff0c\u56e0\u6b64\u53ef\u4ee5\u591a\u6b21\u5c1d\u8bd5\uff0c\u76f4\u5230\u627e\u5230\u81ea\u5df1\u559c\u6b22\u7684\u4e00\u79cd\u3002\uff08\u89c1\u53c2\u8003\u4e2d\u7684 CmdExample\uff09</p> <pre><code>/*! \\brief Brief description.\n *         Brief description continued.\n *\n *  Detailed description starts here.\n *  \n * \\return status code          \\n\n *          0 Success           \\n \n *         -1 Failure\n * \n * \\param[in]       w double the width of a rectangle.\n * \\param[in]       h double the height of a rectangle.\n * \\param[in, out]  area double the area of a rectangle.\n * ... \n */\n</code></pre> <p>\u6ce8\u91ca\u4e3b\u8981\u662f\u4f9b\u5176\u4ed6\u7a0b\u5e8f\u5458\u7406\u89e3\uff08\u4e3b\u8981\u662f\u672a\u6765\u7684\u81ea\u5df1\uff09\uff0c\u4e0d\u662f\u4f9b\u7528\u6237\u9605\u8bfb\u7684\u3002\u826f\u597d\u7684\u4ee3\u7801\u89c4\u8303\u6bd4\u8d77\u5927\u91cf\u7684\u6ce8\u91ca\u6765\u8bf4\u66f4\u52a0\u53cb\u5584\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u591a\u53c2\u8003 nginx \u7b49\u4f18\u79c0\u4ee3\u7801\u7684\u89c4\u8303\u3002</p> <p>\u7ec3\u4e60\u6ce8\u91ca\u98ce\u683c\u4e0d\u5982\u591a\u953b\u70bc\u953b\u70bc\u5982\u4f55\u5199\u7528\u6237\u624b\u518c\u548c\u4ea7\u54c1\u6587\u6863\uff0c\u8fd9\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u66f4\u6709\u76ca\u5904\u3002</p>"},{"location":"cs/essay/0007/#_2","title":"\u6548\u679c","text":"<p>\u627e\u4e2a CMake \u9879\u76ee\u8bd5\u4e00\u4e0b\u5427\u3002</p> <p></p>"},{"location":"cs/essay/0007/#_3","title":"\u603b\u7ed3","text":"<p>\u6807\u9898\u5199\u7684\u662f CMake \u7ec4\u4ef6\uff0c\u4f46\u53ea\u8981\u73af\u5883\u4e2d\u6709 Doxygen \u5de5\u5177\u5c31\u80fd\u4f7f\u7528\u3002\u6bd4\u5982\u7528 shell \u6216\u662f\u522b\u7684\u65b9\u5f0f\u66ff\u6362 <code>@PROJECT_SOURCE_DIR@</code>\uff0c\u518d\u96c6\u6210\u5230\u9879\u76ee\u91cc\uff0c\u65b9\u6cd5\u603b\u662f\u6709\u7684\u3002 </p>"},{"location":"cs/essay/0007/#_4","title":"\u53c2\u8003","text":"<ul> <li>doxygen - Usage</li> <li>doxygen - Configuration</li> <li>doxygen - Documenting the code</li> <li>doxygen - CmdExample</li> <li>cmake - configure_file</li> </ul>"},{"location":"cs/essay/0008/","title":"GTest \u6d4b\u8bd5\u5957\u4ef6","text":"<p>\u5173\u4e8e\u5355\u5143\u6d4b\u8bd5\uff0c\u6bd4\u8f83\u5173\u6ce8\u7684\u70b9</p> <ul> <li>\u6613\u7528\uff0c\u5c06\u8fc7\u7a0b\u4e13\u6ce8\u4e8e\u6d4b\u8bd5</li> <li>\u65b9\u4fbf\uff0c\u53ef\u4ee5\u6784\u9020\u6d4b\u8bd5\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u91cd\u590d\u4f7f\u7528</li> <li>\u76f4\u89c2\uff0c\u7ed3\u679c\u53ef\u89c6\u5316\uff0c\u589e\u5f3a\u53cd\u9988</li> </ul> <p>\u5148\u6765\u770b cmake \u81ea\u5e26\u7684\u6d4b\u8bd5\u9a71\u52a8\u7a0b\u5e8f ctest\uff0cctest \u5f53\u4e14\u4ec5\u5f53\u8fd4\u56de\u503c\u4e3a 0 \u65f6\uff0c\u6d4b\u8bd5\u6210\u529f\u3002\u8fd9\u6837\u4e00\u6765\uff0cctest \u6846\u67b6\u53ef\u4ee5\u5bb9\u7eb3\u5404\u79cd\u8bed\u8a00\u7684\u6d4b\u8bd5\u811a\u672c\uff0c\u6269\u5c55\u6027\u5f3a\u3002\u4f46\u7531\u4e8e\u4e00\u4e2a\u8fd4\u56de\u6761\u76ee\u53ea\u5bf9\u5e94\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u56e0\u6b64\u66f4\u9002\u5408\u7528\u4f5c\u96c6\u6210\u6d4b\u8bd5\uff0c\u7528\u5728\u5355\u5143\u6d4b\u8bd5\u4e0a\u5c5e\u4e8e\u6298\u78e8\u4eba\u3002</p> <p>\u6572\u5b9a\u4e86\u96c6\u6210\u6d4b\u8bd5\uff0c\u5728\u5355\u5143\u6d4b\u8bd5\u4e0a\u518d\u6765\u5bf9\u6bd4\u5bf9\u6bd4 cunit \u548c gtest\u3002</p>"},{"location":"cs/essay/0008/#_1","title":"\u5355\u5143\u6d4b\u8bd5\u6846\u67b6","text":"<p>cunit gtest \u7684\u6838\u5fc3\u601d\u60f3\u662f\u4e00\u6837\u7684\u3002</p> <pre><code>                       +----------------------------------------------+\n                       | unit test                 +---------------+  |\n                       |   +---------------+  +---&gt;+    test 1     |  |\n                       |   |               |  |    +---------------+  |\n                   +------&gt;+    Suit 1     +--+            .          |\n                   |   |   |               |  |    +---------------+  |\n+----------------  |   |   +---------------+  +---&gt;+    test n     |  |\n|               |  |   |          .                +---------------+  |\n|   Registry    +--+   +----------------------------------------------+\n|               |  |              .                +---------------+\n+----------------  |       +---------------+  +---&gt;+    test 1     |\n                   |       |               |  |    +---------------+\n                   +------&gt;+    Suit m     +--+            .\n                           |               |  |    +---------------+\n                           +---------------+  +---&gt;+    test n     |\n                                                   +---------------+\n</code></pre> <p>gtest \u5728\u6613\u7528\u6027\u4e0a\u505a\u5f97\u66f4\u597d\uff08\u652f\u6301\u901a\u914d\u8fc7\u6ee4\uff0c\u5982 <code>--gtest_filter=*</code>\uff09\uff0c\u63a5\u53e3\u5c01\u88c5\u7684\u5f88\u5e72\u51c0\u3002\u652f\u6301\u4e8b\u4ef6\u673a\u5236\uff0c\u65b9\u4fbf\u6027\u4e5f\u6ee1\u8db3\u4e86\uff0c\u6700\u540e\u770b\u4e0b\u53ef\u89c6\u5316\u65b9\u9762\u3002</p>"},{"location":"cs/essay/0008/#_2","title":"\u53ef\u89c6\u5316","text":"<pre><code># \u6267\u884c gtest \u7a0b\u5e8f\uff0c\u5e76\u8f93\u51fa\u4e3a xml\n$ ./a.out --gtest_output=xml:./result.xml\n\n# xml \u8f6c html\n# \u53c2\u8003 https://gitlab.uni-koblenz.de/agrt/gtest2html readme\u4ecb\u7ecd\n</code></pre> <p>\u53ef\u89c6\u5316\u4e0a cunit \u81ea\u5e26\u663e\u793a xml \u7684\u5de5\u5177\uff0cgtest \u9700\u8981\u7b2c\u4e09\u65b9\u5de5\u5177\u8f6c\u6362\u3002</p> <p>\u6709\u4e00\u8bf4\u4e00\uff0ccunit \u8f93\u51fa\u9875\u9762\u98ce\u683c\u8fd8\u662f\u5f88\u597d\u770b\u7684\u3002</p>"},{"location":"cs/essay/0008/#cmake","title":"\u96c6\u6210\u5230 CMake","text":"<p>gtest \u4ece 1.13 \u5f00\u59cb\u9700\u8981 c++14 \u7684\u652f\u6301\uff0c1.12 \u9700\u8981 c++11\u3002\u5927\u591a\u5b9e\u9645\u9879\u76ee\u4e5f\u4e0d\u4f1a\u76f2\u76ee\u5f15\u8fdb c++14 \u7684\u7279\u6027\uff0c\u56e0\u6b64\uff0c\u6307\u5b9a 1.12 \u4e00\u822c\u591f\u7528\u4e86\u3002</p> <pre><code>set(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nfind_package(GTest QUIET)\n\nif(NOT GTest_FOUND)\n    include(FetchContent)\n    FetchContent_Declare(\n        googletest\n        GIT_REPOSITORY https://github.com/google/googletest.git\n        GIT_TAG release-1.12.0\n    )\n\n    # FetchContent_MakeAvailable() is not suitable for here :(\n    FetchContent_GetProperties(googletest)\n    if(NOT googletest_POPULATED)\n        FetchContent_Populate(googletest)\n        add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR})\n    endif()\nendif()\n\n\nadd_executable(exec_name exec_name.cc)\ntarget_link_libraries(exec_name gtest gtest_main)\n</code></pre>"},{"location":"cs/essay/0008/#_3","title":"\u7528\u6cd5","text":"<p>gtest \u7684\u5224\u65ad\u5206\u4e3a\u65ad\u8a00 ASSERT_ \u548c\u671f\u671b EXPECT_\uff0c\u4e24\u8005\u5728\u6267\u884c\u65f6\u7684\u533a\u522b\u76f8\u5f53\u4e8e break \u548c continue\u3002</p> <p>\u5224\u65ad\u7c7b\u578b\u901f\u67e5\uff1a</p> \u4e3b\u8981\u5224\u65ad\u7c7b\u578b \u5b8f \u8bf4\u660e \u5e03\u5c14\u5224\u65ad _TRUE(condition) _FALSE(condition) \u6574\u578b\u5224\u65ad _EQ(expect, actual) == _NE(expect, actual) != _LT(expect, actual) &lt; _LE(expect, actual) &lt;= _GT(expect, actual) &gt; _GE(expect, actual) &gt;= \u6d6e\u70b9\u578b\u5224\u65ad _FLOAT_EQ _DOUBLE_EQ _NEAR((v1, v2, abs_err)) abs(v1, v2) &lt;=abs_err \u5b57\u7b26\u4e32\u5224\u65ad _STREQ _STRNE _STRCASEEQ _STRCASENE \u5f02\u5e38\u5224\u65ad _THROW(statement, expect_e) statement \u629b\u51fa\u671f\u671b\u5f02\u5e38 _ANY_THROW(statement) statement \u629b\u51fa\u4efb\u610f\u5f02\u5e38 _NO_THROW(statement) statement \u65e0\u5f02\u5e38"},{"location":"cs/essay/0008/#_4","title":"\u603b\u7ed3","text":"<p>gtest \u76ee\u524d\u4ece\u6211\u7684\u4f7f\u7528\u89d2\u5ea6\u6765\u8bf4\uff0c\u53ea\u5269\u4e0b\u53ef\u89c6\u5316\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\u5982\u679c gtest \u8f93\u51fa\u7684 xml \u652f\u6301 cunit \u98ce\u683c\uff0c\u4e14\u4e0d\u9700\u8981\u592a\u590d\u6742\u7684\u8bbe\u7f6e\u8fdb\u884c\u683c\u5f0f\u8f6c\u6362\uff0c\u5c31\u5f88\u597d\u4e86\u3002 </p>"},{"location":"cs/essay/0008/#_5","title":"\u53c2\u8003","text":"<ul> <li> <p>gtest \u4e8b\u4ef6\u673a\u5236</p> </li> <li> <p>gtest \u5355\u5143\u6d4b\u8bd5\u4e0e\u4ee3\u7801\u8986\u76d6\u7387</p> </li> <li> <p>cunit \u5355\u5143\u6d4b\u8bd5</p> </li> </ul>"},{"location":"cs/essay/0009/","title":"GCC \u4f18\u5316\u9009\u9879","text":"<p>what is optimization for a program?</p> <ul> <li>run faster</li> <li>use less memory, or consume fewer system resources.</li> </ul> <p>This can involve various techniques such as algorithmic improvements, code restructuring, memory management, and compiler optimizations.</p> <p>Let's take a look at compiler optimizations.</p>"},{"location":"cs/essay/0009/#-o","title":"-O","text":"<p>You can invoke GCC with -Q --help=optimizers to find out the exact set of optimizations that are enabled at each level.</p> <ul> <li> <p><code>-O&lt;level&gt;</code> The default level is 0.</p> <ul> <li> <p><code>-O0</code> Reduce compilation time and make debugging produce the expected results.</p> </li> <li> <p><code>-O1</code> The compiler tries to reduce code size and execution time, without performing any optimizations that take a great deal of compilation time.</p> </li> <li> <p><code>-O2</code> Optimize even more. GCC performs nearly all supported optimizations that do not involve a space-speed tradeoff. As compared to -O, this option increases both compilation time and the performance of the generated code. </p> </li> <li> <p><code>-O3</code> Optimize yet more.</p> </li> </ul> </li> </ul> <p><code>-O&lt;level&gt;</code> turns on all optimizations specified by <code>-O&lt;level - 1&gt;</code> also turns on other optimization flags.</p> <ul> <li> <p><code>-Ofast</code> enables all -O3 optimizations and disregard strict standards compliance.</p> </li> <li> <p><code>-Og</code> Optimize debugging experience. -Og should be the optimization level of choice for the standard edit-compile-debug cycle, offering a reasonable level of optimization while maintaining fast compilation and a good debugging experience. It is a better choice than -O0 for producing debuggable code because some compiler passes that collect debug information are disabled at -O0. Like -O0, -Og completely disables a number of optimization passes so that individual options controlling them have no effect. Otherwise -Og enables all -O1 optimization flags except for those that may interfere with debugging.</p> </li> <li> <p><code>-Os</code> Optimize for size. -Os enables all -O2 optimizations except those that often increase code size. It also enables -finline-functions, causes the compiler to tune for code size rather than execution speed, and performs further optimizations designed to reduce code size.</p> </li> <li> <p><code>-Oz</code> Optimize aggressively for size rather than speed. This may increase the number of instructions executed if those instructions require fewer bytes to encode. -Oz behaves similarly to -Os including enabling most -O2 optimizations.</p> </li> </ul> <p>If you use multiple -O options, with or without level numbers, the last such option is the one that is effective.</p> <p><pre><code>      Og         Os/Oz               Ofast                   1. Og    for debug\n      ^          ^                   ^                       2. Os/Oz for size\n      |          |                   |                       3. Ofast not use\n+----------+----------+----------+------&gt; optimize level   /-----------------------\nO0         O1         O2         O3                        | O0 for debug version\n&gt;----------&gt;----------&gt;----------&gt;------&gt; enabling options | O2 for release version\n</code></pre> Thinks for Meld, which helps me compare the list of optimization options.</p> <p>Some commonly used options: <pre><code>-fomit-frame-pointer\n...\n</code></pre></p>"},{"location":"cs/essay/0009/#-g","title":"-g","text":"<ul> <li> <p><code>-g&lt;level&gt;</code> The default level is 2.</p> <ul> <li> <p><code>-g0</code> produces no debug information at all. Thus, -g0 negates -g.</p> </li> <li> <p><code>-g1</code> produces minimal information, enough for making backtraces in parts of the program that you don\u2019t plan to debug. This includes descriptions of functions and external variables, and line number tables, but no information about local variables.</p> </li> <li> <p><code>-g2</code> between g1 and g3. And -g2 equals -g.</p> </li> <li> <p><code>-g3</code> includes extra information, such as all the macro definitions present in the program. Some debuggers support macro expansion when you use -g3.</p> </li> </ul> </li> </ul> <p>If you use multiple -O options, with or without level numbers, the last such option is the one that is effective.</p> <pre><code>g0         g1         g2         g3                        | g2 for debug version\n&gt;----------&gt;----------&gt;----------&gt;------&gt; debug level      | g0 for release version\n                      -g\n</code></pre> <p>In addition, command strip can remove the debugging information from executable programs. As a result, the program size is reduced.</p>"},{"location":"cs/essay/0009/#attributes","title":"attributes","text":"<p>Some common use cases include:</p> <pre><code>__attribute__ ((always_inline))\n__attribute__ ((noreturn))\n__attribute__ ((weak))\n__attribute__ ((visibility (\"hidden\")))\n__attribute__ ((packed))\n...\n</code></pre> <p>Perhaps I should write another article to elaborate on this.</p>"},{"location":"cs/essay/0009/#summary","title":"summary","text":"<p>As you can see, the mechanism of GCC is quite extensive. Although many things may not be needed in daily use, it is still beneficial to have some knowledge about them.</p> <p>The optimization mechanism of GCC should be considered as a secondary means. Given the capabilities of the current machine, greater attention should be given to algorithmic improvements, code restructuring, and memory management.</p>"},{"location":"cs/essay/0009/#refer","title":"refer","text":"<ul> <li>gcc optimize options</li> <li>hacknews about gcc optimize level</li> <li>gcc debugging options</li> <li>Attributes of Function / Variables / Type </li> </ul>"},{"location":"cs/essay/0010/","title":"TCP/IP \u534f\u8bae\u6808","text":"<p>The realm of network programming involves various concepts, which often overwhelm beginners. However, these concepts are foundational and essential. Unfortunately, in practical work, we often encounter them in isolated and fragmented ways, without a clear and gradual learning path. This can be quite disheartening.</p>"},{"location":"cs/essay/0010/#tcpip-stack-intro","title":"tcp/ip stack intro","text":"<pre><code>  +-------+                +-------+                         +-------+\n  | ping  |                |telnet |                         |  DNS  |\n  +---+---+                +---+---+                         +---+---+\n      |                        |                                 |\n+----------------------------------------------------------------------+  socket\n      |                        |                                 |\n      |                    +---+---+                         +---+---+\n      |                    |  TCP  +-------------+-----------+  UDP  |\n      |                    +-------+             |           +-------+\n      |                                          |\n+----------------------------------------------------------------------+\n      |                                          |\n  +---+---+                                      |\n  | ICMP  +--------------------------------------+\n  +-------+                                      |\n                                             +---+---+\n                                             |  IP   |\n                                             +---+---+\n                                                 |\n+----------------------------------------------------------------------+\n                                                 |\n                         +-------+               |\n                         |  ARP  +---------------+\n                         +-------+               |\n                                             +---+---+\n                                             | Frame |\n                                             +-------+\n</code></pre>"},{"location":"cs/essay/0010/#arp","title":"arp","text":"<pre><code>ARP                                            &lt;net/if_arp.h&gt; struct arphdr\n                     +----------------------+  ar_hdr  /* format of  hardware address */\n                     |    +-----------------|  ar_pro  /* format of  protocol address */\n                     |    |    +------------|  ar_hln  /* length of  hardware address */\n                     |    |    |  +---------|  ar_pln  /* length of  protocol address */\n                     |    |    |  |  +------+  ar_op   /* ARP opcode (command)        */\n                     |    |    |  |  |\n                     +----------------------------------------------------------------+\n              (byte) |2   |2   |1 |1 |2   |6           |4       |6           |4       |\n                     +----------------------------------------------------------------+\n                                          |            |        |            |\n&lt;netinet/if_ether.h&gt; struct ether_arp     |            |        |            |\narp_sha  /* sender hardware address */  +-+            |        |            |\narp_spa  /* sender protocol address */  |--------------+        |            |\narp_tha  /* target hardware address */  |-----------------------+            |\narp_tpa  /* target protocol address */  +------------------------------------+\n</code></pre>"},{"location":"cs/essay/0010/#ip","title":"ip","text":"<pre><code>IP\n                        1                            1\n(bit)  0  3 4  7 8      5            0      7 8      5\n      +----+----+--------+          +-----------------+    &lt;netinet/ip.h&gt; struct ip\n      | V  | hl | tos    |   -----&gt; |ttl     |p       |\n      +----+----+--------+  /       +-----------------+    ip_v    /* version               */\n      ^                    /                               ip_hl   /* header length         */\n      |                   |                                ip_tos  /* type of service       */\n      +--------------+--------------------------------+    ip_len  /* total length          */\n      |    |len |id  |    |    |sum |src     |dst     |    ip_id   /* identification        */\n      +-------------------+---------------------------+    ip_off  /* fragment offset field */\n(byte) 2    2    2   |2    2    2    4        4            ip_ttl  /* time to live          */\n                     v                                     ip_p    /* protocol              */\n                     +-----------------+                   ip_sum  /* checksum              */\n                     |id |off          |                   ip_src  /* source address        */\n                     +-----------------+                   ip_dst  /* dest address          */\n                      0 2 3           1\n                                      5\n</code></pre>"},{"location":"cs/essay/0010/#icmp","title":"icmp","text":"<pre><code>ICMP                                       &lt;netinet/ip_icmp.h&gt;\n\n+---------------------------------------&gt;  type         /* message type  */\n|  +------------------------------------&gt;  code         /* type sub-code */\n|  |  +---------------------------------&gt;  checksum\n|  |  |\n+-----------+---------------------------+  union {\n|1 |1 |2    | 4 (variable)              |    struct {\n+-----------+---------------------------+      id\n                                               sequence\n ICMP_ECHO      8  &lt;--------------------+    } echo     /* echo datagram   */\n ICMP_ECHOREPLY 0           type\n                                             gateway    /* gateway address */\n\n                                             struct {\n                                               reserved\n                                               mtu\n                                             } frag     /* path mtu discovery */\n                                           }\n</code></pre>"},{"location":"cs/essay/0010/#tcp","title":"tcp","text":"<pre><code>TCP                           1 1 1 1 1 1            &lt;netinet/tcp.h&gt;\n        (bit)   0  3 4  7 8 9 0 1 2 3 4 5\n               +-----------+-+-+-+-+-+-+-+           sport    off  :4    win\n               |off |res1| | | | | | | | |           dport    res1 :4    sum\n               +-----------+-+-+-+-+-+-+-+           seq      CWR  :1    urp\n                                         ^           ack      ECE  :1\n                                         |                    URG  :1\n       +---------------------------+--+------------------+    ACK  :1\n       |sp  |dp  |seq     |ack     |  |  |win |sum |urp  |    PSH  :1\n       +---------------------------+--+------------------+    RST  :1\n(byte)  2    2    4        4        1  1  2    2    2         SYN  :1\n                                                              FIN  :1\n</code></pre>"},{"location":"cs/essay/0010/#udp","title":"udp","text":"<pre><code>UDP                               &lt;netinet/udp.h&gt;\n\n       +------------------+       sport\n       |sp  |dp  |ulen|sum|       dport\n       +------------------+       ulen\n(byte)  2    2    2    2          sum\n</code></pre>"},{"location":"cs/essay/0010/#dns","title":"dns","text":"<pre><code>DNS                                         Response      +---------+\n                                            Opcode                  |\n                                            Authoritative           |\n                                         6  Truncated               |\n                              1 1 1  1   7  Recursion desired       |\n      (bit)  0 1  4 5 6 7 8 9 0 1 2  5      Recursion available     |\n            +-+----+-+-+-+-+-+-+-+----+     Z                       |     transaction id\n            | |    | | | | | | | |    |     Answer anthenticated    +---+ flags\n            +-+----+-+-+-+-+-+-+-+----+     Non-authenticated data  |     quentions\n            ^                               Reply code    +---------+     answer RRs\n            |                                                             authority RRs\n       +---------+----+----+----+----+----+-----+                         additional RRs\n(byte) |    |    |    |    |    |    |    |    ||                         queries\n       +----+----+----+----+----+----+----+-----+                         ansers\n        2    2    2    2    2    2    2    2\n</code></pre>"},{"location":"cs/essay/0010/#practice","title":"practice","text":"<p>network topology</p> <pre><code>+-------------------+                  +-------------------+\n| laptop            |                  | pi                |\n| 192.168.2.10      |                  | 192.168.2.2       |\n| a8:9a:73:35:96:89 |                  | e4:5f:36:68:db:bd |\n| manjaro           |                  | raspberry         |\n+--------+----------+                  +---------+---------+\n  wlp2s0 |                                       |   eth0\n+--------+--------------------+------------------+---------+\n                      wlan0   |\n                   +----------+----------+\n                   | Router              |\n                   | 192.168.2.1         |\n                   | 90:f7:f2:eb:bb:d4   |\n                   +----------+----------+\n                              |\n                              +\n</code></pre>"},{"location":"cs/essay/0010/#arp_1","title":"arp","text":"<p><pre><code>$ sudo arp -d 192.168.2.2\n$ sudo tcpdump -i wlp2s0 -ent '(dst 192.168.2.2 and src 192.168.2.10) or \n                               (dst 192.168.2.10 and src 192.168.2.2)' -w arp.pcap \n\n# another window\n$ telnet 192.168.2.2 echo\nTrying 192.168.2.2...\nConnected to 192.168.2.2.\nEscape character is '^]'.\nhello!\nhello!\n^]\ntelnet&gt; quit\nConnection closed.\n</code></pre> <pre><code>a8:9a:73:35:96:89 &gt; ff:ff:ff:ff:ff:ff, ethertype ARP (0x0806), length 42: \n        Request who-has 192.168.2.2 tell 192.168.2.10, length 28\ne4:5f:36:68:db:bd &gt; a8:9a:73:35:96:89, ethertype ARP (0x0806), length 42: \n        Reply 192.168.2.2 is-at e4:5f:36:68:db:bd, length 28\n</code></pre></p>"},{"location":"cs/essay/0010/#dns_1","title":"dns","text":"<pre><code>$ sudo tcpdump -i eth0 -nt -s 500 port domain\nIP 192.168.2.2.54537 &gt; 192.168.2.1.53: 40868+ A? www.baidu.com. (31)\nIP 192.168.2.1.53 &gt; 192.168.2.2.54537: 40868 2/0/0 A 14.119.104.254, A 14.119.104.189 (63)\n\n# another window\n$ host -t A www.baidu.com\nwww.baidu.com has address 14.119.104.254\nwww.baidu.com has address 14.119.104.189\n</code></pre>"},{"location":"cs/essay/0010/#icmp_1","title":"icmp","text":"<p>MTU:  The maximum transmission unit (MTU) of a frame.</p> <p>IP Fragment:  If the IP layer has data to transmit and the length of the data is larger than the maximum transmission unit (MTU) of the link layer, then the IP layer needs to perform fragmentation.</p> <pre><code>MTU:   20                    8              1472                        = 1500\n      +---------------------+-------------+---------------------------+\n      | IP hdr              | ICMP hdr    | ICMP data                 |\n      +---------------------+-------------+---------------------------+\n\n      if data &gt; 1472  +------------+       +------------+       +------------+\n                      | IP    hdr  |       | IP    hdr  |       | IP    hdr  |\n      for example:    | (set  MF)  |       |(set offset)|       |(set offset)|\n                      +------------+       +------------+       +------------+\n                      | ICMP  hdr  |   +   |            |   +   |            |\n                      +------------+       |            |       |            |\n                      | ICMP  data |       | ICMP  data |       | ICMP  data |\n                      |   1472     |       |   1480     |       |     1      |\n                      +------------+       +------------+       +------------+\n                       1500                 1500                 21\n</code></pre> <pre><code>$ ping 192.168.2.2\n$ sudo tcpdump -i wlp2s0 -ntv icmp \nIP (tos 0x0, ttl 64, id 13535, offset 0, flags [DF], proto ICMP (1), length 84)\n    192.168.2.10 &gt; 192.168.2.2: ICMP echo request, id 12, seq 1, length 64\nIP (tos 0x0, ttl 64, id 11628, offset 0, flags [none], proto ICMP (1), length 84) \n    192.168.2.2 &gt; 192.168.2.10: ICMP echo reply, id 12, seq 1, length 64 \n\nIP (tos 0x0, ttl 64, id 13681, offset 0, flags [DF], proto ICMP (1), length 84) \n    192.168.2.10 &gt; 192.168.2.2: ICMP echo request, id 12, seq 2, length 64 \nIP (tos 0x0, ttl 64, id 11827, offset 0, flags [none], proto ICMP (1), length 84)\n    192.168.2.2 &gt; 192.168.2.10: ICMP echo reply, id 12, seq 2, length 64\n\n\n$ ping 192.168.2.2 -s 1473\n$ sudo tcpdump -i wlp2s0 -ntv icmp \nIP (tos 0x0, ttl 64, id 21704, offset 0, flags [+], proto ICMP (1), length 1500) \n    192.168.2.10 &gt; 192.168.2.2: ICMP echo request, id 13, seq 1, length 1480 \nIP (tos 0x0, ttl 64, id 21704, offset 1480, flags [none], proto ICMP (1), length 21) \n    192.168.2.10 &gt; 192.168.2.2: ip-proto-1 \nIP (tos 0x0, ttl 64, id 25541, offset 0, flags [+], proto ICMP (1), length 1500) \n    192.168.2.2 &gt; 192.168.2.10: ICMP echo reply, id 13, seq 1, length 1480 \nIP (tos 0x0, ttl 64, id 25541, offset 1480, flags [none], proto ICMP (1), length 21) \n    192.168.2.2 &gt; 192.168.2.10: ip-proto-1 \n</code></pre>"},{"location":"cs/essay/0010/#tcp-ip","title":"tcp &amp; ip","text":""},{"location":"cs/essay/0010/#tcp_1","title":"tcp","text":"<p>tcpdump flags: S (SYN), F (FIN), P (PUSH), R (RST), U (URG), W (ECN CWR), E (ECN-Echo) or '.' (ACK), or 'none' if no flags are set.</p> <pre><code>$ sudo tcpdump -i wlp2s0 -nt '(dst 192.168.2.2 and src 192.168.2.10) or \n                              (dst 192.168.2.10 and src 192.168.2.2)'\n\n\nIP 192.168.2.10.53014 &gt; 192.168.2.2.7: Flags [S], seq 334370016, win 64240, \n        options [mss 1460,sackOK,TS val 3258289009 ecr 0,nop,wscale 7], length 0\nIP 192.168.2.2.7 &gt; 192.168.2.10.53014: Flags [S.], seq 2665287474, ack 334370017, win 65160, \n        options [mss 1460,sackOK,TS val 1146990448 ecr 3258289009,nop,wscale 7], length 0\nIP 192.168.2.10.53014 &gt; 192.168.2.2.7: Flags [.], ack 1, win 502, \n        options [nop,nop,TS val 3258289143 ecr 1146990448], length 0       \n\n\nIP 192.168.2.10.53014 &gt; 192.168.2.2.7: Flags [P.], seq 1:9, ack 1, win 502, \n        options [nop,nop,TS val 3258293902 ecr 1146990448], length 8       \nIP 192.168.2.2.7 &gt; 192.168.2.10.53014: Flags [.], ack 9, win 509, \n        options [nop,nop,TS val 1146995364 ecr 3258293902], length 0   \nIP 192.168.2.2.7 &gt; 192.168.2.10.53014: Flags [P.], seq 1:9, ack 9, win 509, \n        options [nop,nop,TS val 1146995365 ecr 3258293902], length 8\nIP 192.168.2.10.53014 &gt; 192.168.2.2.7: Flags [.], ack 9, win 502, \n        options [nop,nop,TS val 3258294059 ecr 1146995365], length 0\n\n\nIP 192.168.2.10.53014 &gt; 192.168.2.2.7: Flags [F.], seq 9, ack 9, win 502, \n        options [nop,nop,TS val 3258305051 ecr 1146995365], length 0\nIP 192.168.2.2.7 &gt; 192.168.2.10.53014: Flags [F.], seq 9, ack 10, win 509, \n        options [nop,nop,TS val 1147006418 ecr 3258305051], length 0\nIP 192.168.2.10.53014 &gt; 192.168.2.2.7: Flags [.], ack 10, win 502, \n        options [nop,nop,TS val 3258305095 ecr 1147006418], length 0\n</code></pre> <pre><code># RST when accessing a non-existent port. \nIP 192.168.2.10.46498 &gt; 192.168.2.2.54321: Flags [S], seq 2546188616, win 64240, \n        options [mss 1460,sackOK,TS val 3265806521 ecr 0,nop,wscale 7], length 0\nIP 192.168.2.2.54321 &gt; 192.168.2.10.46498: Flags [R.], seq 0, ack 2546188617, win 0, length 0\n</code></pre>"},{"location":"cs/essay/0010/#thoughts","title":"thoughts","text":"<p>After gaining a fundamental understanding of the TCP/IP protocol model, let's proceed to explore sockets.</p>"},{"location":"cs/essay/0010/#refer","title":"refer","text":"<ul> <li>High Performance Linux Service Programming - chapter 1~3</li> <li>TCP/IP Illustrated Volume 1</li> <li>TCP/IP Illustrated Volume 2</li> <li>stackoverflow - enable telnet server</li> </ul>"},{"location":"cs/essay/0011/","title":"Socket API \u6982\u5ff5","text":"<p>Socket is an abstraction layer between the applicantion layer and the transport layer. It abstracts complex operations of the TCP/IP layer into several simple interfaces for the application layer to call and implement processes to communicate in the network.</p>"},{"location":"cs/essay/0011/#socket-api-map","title":"socket api map","text":"<pre><code>                                 +--------+\n(AF_INET    SOCK_STREAM)         | socket |\n AF_INET6   SOCK_DGRAM           +--+-----+   setsockopt() ------ SO_REUSEADDR\n                                    |                           | SO_RCVBUF     SO_SNDBUF\n                 +------------------+------------------+        | SO_RCVLOWAT   SO_SNDLOWAT\n                 |                                     | %      - SO_LINGER\n                 |                                  +--+-----+\n                 |                                  | bind   |  EADDRINUSE\n                 |                                  +--+-----+\n                 |                                     | %\n                 |                                  +--+-----+\n                 |                                  | listen |  ESTABLISHED QUEUE\n               % |                                  +--+-----+  + SYN_RCVD  QUEUE &lt; backlog\n              +--+------+ syn -&gt;                       |\nECONNREFUSED  | connect +------------------------------+\nETIMEDOUT     +--+------+                              | %#\n                 |                                  +--+-----+\n                 |            ( return one of       | accept |  (listening socket, ...)\n                 |              connected sockets ) +--+-----+\n               % |                                     | %#\n              +--+-------------------------------------+-----+\n              | write sendto                recvform  read   |  &lt;sys/uio.h&gt;\n              |       sendmsg               recvmsg          |  readv\n              | read                                  write  |  writev\n              +--+-------------------------------------+-----+\n               % |                                     | %#\n               +-+---+                               +-+---+\n               |close| fin -&gt;                &lt;- fin  |close|\n               +-----+                               +-----+    # connfd\n                                                         %      % sockfd\n</code></pre>"},{"location":"cs/essay/0011/#macro-define","title":"macro define","text":"<p>Calling the API directly is too cumbersome, let's simplify it using macros.</p> <pre><code>/* struct sockaddr_in address */\n#define init_address(address, ip, port)                \\\n    bzero(&amp;address, sizeof(address));                  \\\n    address.sin_family = AF_INET;                      \\\n    inet_pton(AF_INET, ip, &amp;address.sin_addr);         \\\n    address.sin_port = htons(port);\n\n#define Socket() \\\n    socket(PF_INET, SOCK_STREAM, 0)\n\n#define Bind(socket, server) \\\n    bind(socket, (struct sockaddr*)&amp;server, (socklen_t)sizeof(server))\n\n#define Listen(socket, n) \\\n    listen(socket, n)\n\n#define Accept(socket, client, client_len) \\\n    accept(socket, (struct sockaddr*)&amp;client, &amp;client_len)\n\n#define Connect(socket, server) \\\n    connect(socket, (struct sockaddr*)&amp;server, (socklen_t)sizeof(server))\n\n#define Close(socket) \\\n    close(socket);\n\n#define Send(socket, buf) \\\n    send(socket, buf, strlen(buf), 0)\n\n#define Recv(socket, buf) \\\n    recv(socket, buf, sizeof(buf) - 1, 0)\n</code></pre>"},{"location":"cs/essay/0011/#boundary","title":"boundary","text":"<p>Understand how the client and server start and terminate. What happens when certain errors occur, such as client host crash, client process crash, or network connection disruption? </p> <p>Only by understanding these boundary conditions and their interaction with the TCP/IP protocol can robust client and server programs be written to handle these situations.</p>"},{"location":"cs/essay/0011/#rst-before-accept","title":"RST before accept","text":"<pre><code>192.168.2.10.37120 &gt; 192.168.2.10.54321: Flags [S], seq 3252709593, win 65495, \n        options [mss 65495,sackOK,TS val 759990870 ecr 0,nop,wscale 7], length 0\n192.168.2.10.54321 &gt; 192.168.2.10.37120: Flags [S.], seq 139043462, ack 3252709594, win 65483,\n        options [mss 65495,sackOK,TS val 759990870 ecr 759990870,nop,wscale 7], length 0\n192.168.2.10.37120 &gt; 192.168.2.10.54321: Flags [.], ack 1, win 512, \n        options [nop,nop,TS val 759990870 ecr 759990870], length 0\n192.168.2.10.37120 &gt; 192.168.2.10.54321: Flags [R.], seq 1, ack 1, win 512, \n        options [nop,nop,TS val 759990870 ecr 759990870], length 0\n</code></pre>"},{"location":"cs/essay/0011/#server-terminated","title":"server terminated","text":"<pre><code>192.168.2.10.58730 &gt; 192.168.2.10.54321: Flags [S], seq 559678739, win 65495, \n        options [mss 65495,sackOK,TS val 800516176 ecr 0,nop,wscale 7], length 0\n192.168.2.10.54321 &gt; 192.168.2.10.58730: Flags [S.], seq 2091989194, ack 559678740, win 65483,\n        options [mss 65495,sackOK,TS val 800516176 ecr 800516176,nop,wscale 7], length 0\n192.168.2.10.58730 &gt; 192.168.2.10.54321: Flags [.], ack 1, win 512, \n        options [nop,nop,TS val 800516176 ecr 800516176], length 0\n\n192.168.2.10.58730 &gt; 192.168.2.10.54321: Flags [P.], seq 1:7, ack 1, win 512, \n        options [nop,nop,TS val 800532435 ecr 800516176], length 6\n192.168.2.10.54321 &gt; 192.168.2.10.58730: Flags [.], ack 7, win 512, \n        options [nop,nop,TS val 800532435 ecr 800532435], length 0\n192.168.2.10.54321 &gt; 192.168.2.10.58730: Flags [P.], seq 1:7, ack 7, win 512, \n        options [nop,nop,TS val 800532435 ecr 800532435], length 6\n192.168.2.10.58730 &gt; 192.168.2.10.54321: Flags [.], ack 7, win 512, \n        options [nop,nop,TS val 800532435 ecr 800532435], length 0\n\n192.168.2.10.54321 &gt; 192.168.2.10.58730: Flags [F.], seq 7, ack 7, win 512, \n        options [nop,nop,TS val 800645539 ecr 800532435], length 0\n192.168.2.10.58730 &gt; 192.168.2.10.54321: Flags [.], ack 8, win 512, \n        options [nop,nop,TS val 800645586 ecr 800645539], length 0\n\n192.168.2.10.58730 &gt; 192.168.2.10.54321: Flags [P.], seq 7:12, ack 8, win 512, \n        options [nop,nop,TS val 800775642 ecr 800645539], length 5\n192.168.2.10.54321 &gt; 192.168.2.10.58730: Flags [R], seq 2091989202, win 0, length 0\n</code></pre>"},{"location":"cs/essay/0011/#server-host-crash","title":"server host crash","text":"<p>It will retransmit before timeout.</p> <pre><code>192.168.2.2.53050 &gt; 192.168.2.10.54321: Flags [P.], seq 17:19, ack 17, win 502, \n        options [nop,nop,TS val 2312873962 ecr 1837083938], length 2\n192.168.2.2.53050 &gt; 192.168.2.10.54321: Flags [P.], seq 17:19, ack 17, win 502, \n        options [nop,nop,TS val 2312874549 ecr 1837083938], length 2\n192.168.2.2.53050 &gt; 192.168.2.10.54321: Flags [P.], seq 17:19, ack 17, win 502, \n        options [nop,nop,TS val 2312875541 ecr 1837083938], length 2\n192.168.2.2.53050 &gt; 192.168.2.10.54321: Flags [P.], seq 17:19, ack 17, win 502, \n        options [nop,nop,TS val 2312877525 ecr 1837083938], length 2\n192.168.2.2.53050 &gt; 192.168.2.10.54321: Flags [P.], seq 17:19, ack 17, win 502, \n        options [nop,nop,TS val 2312881557 ecr 1837083938], length 2\n</code></pre>"},{"location":"cs/essay/0011/#thoughts","title":"thoughts","text":"<p>Transitioning naturally from TCP/IP protocol to socket API, we see that the existing I/O operations are both cumbersome and inefficient. </p> <p>So the problem in socket usage is how to handle I/O more effectively.</p>"},{"location":"cs/essay/0011/#refer","title":"refer","text":"<ul> <li>High Performance Linux Service Programming - chapter 5</li> <li>unpv1: the sockets networking api- chapter 5</li> </ul>"},{"location":"cs/essay/0012/","title":"IO \u590d\u7528","text":"<p>Once the socket communication is established, the most frequent operation is I/O between them. This brings two issues: one is not blocking on input from a specific source, and the other is how to minimize data copying between the kernel buffer and the data buffer.</p> <p>The former requires I/O multiplexing, and the latter requires the use of some advanced I/O functions.</p>"},{"location":"cs/essay/0012/#io-mux","title":"io mux","text":""},{"location":"cs/essay/0012/#select","title":"select","text":"<pre><code>&lt;sys/select.h&gt;                FD_ZERO         select\n                              FD_SET    +---&gt; (int      , +-&gt; fd + 1\n fd_set : 1024 bit            FD_CLR           fd_set*  , |-&gt; read       fd_set\n+-------------------------------------+        fd_set*  , |-&gt; write      fd_set\n|0 0 0 0 0 0 0 0 0 0 0 0 . . . . . . .|        fd_set*  , |-&gt; exceptions fd_set\n+-------------------------------------+        timeval* , +-&gt; timeout  usually NULL\n                              FD_ISSET  &lt;---+ );\n</code></pre> <p>fd starts from 0, so nfds needs to be increased by 1.</p> <p>after each call to <code>select</code>, it will clear the fds, and need to rejoin it!</p> <p>thus, <code>select</code> is suitable for detecting only one socket fd. for more, we need <code>poll</code>.</p> <p>by the way, fd_set is an example of bitmap.</p>"},{"location":"cs/essay/0012/#poll","title":"poll","text":"<pre><code>&lt;sys/poll.h&gt;                  poll(struct pollfd *, unsigned long nfds, int timeout);\n\n struct pollfd {                        array            array index       INFTIM\n     int   fd;\n     short events;  &lt;---+ register                    no limited to 1024\n     short revents; +---&gt;  detect\n };\n</code></pre>"},{"location":"cs/essay/0012/#epoll","title":"epoll","text":"<pre><code>&lt;sys/epoll.h&gt;             + int epoll_create (int size);\nstruct epoll_event        |\n{                         |                                  EPOLL_CTL_ADD 1\n  uint32_t     events;    | event.events + = EPOLLET;    +&gt;  EPOLL_CTL_DEL 2\n  epoll_data_t data;      |                              |   EPOLL_CTL_MOD 3\n};                        |                              +\n                          | int epoll_ctl (int epfd, int op, int fd,struct epoll_event *event)\nstruct epoll_event event; |\nevent.data.fd = fd;       | int epoll_wait (int epfd, struct epoll_event *events,\nevent.events = EPOLLIN;   +                                   int maxevents, int timeout)\n\n                        /------------+\nin case       socket_fd-       threads       we need EPOLLONESHOT\n                        \\------------+\n</code></pre>"},{"location":"cs/essay/0012/#compare","title":"compare","text":""},{"location":"cs/essay/0012/#refer","title":"refer","text":"<ul> <li>High Performance Linux Service Programming - chapter 9</li> <li>unpv1: the sockets networking api- chapter 6</li> </ul>"},{"location":"cs/essay/0013/","title":"\u7f16\u8bd1\u548c\u94fe\u63a5","text":""},{"location":"cs/essay/0013/#original-text","title":"Original text","text":"<p>IDE \u548c\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u9ed8\u8ba4\u914d\u7f6e\u3001\u7f16\u8bd1\u548c\u94fe\u63a5\u53c2\u6570\u5bf9\u4e8e\u5927\u90e8\u5206\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u800c\u8a00\u5df2\u7ecf\u8db3\u591f\u4f7f\u7528\u4e86\uff0c\u4f46\u662f\u5728\u8fd9\u6837\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u88ab\u8fd9\u4e9b\u590d\u6742\u7684\u96c6\u6210\u5de5\u5177\u6240\u63d0\u4f9b\u7684\u5f3a\u5927\u529f\u80fd\u6240\u8ff7\u60d1\uff0c\u5f88\u591a\u7cfb\u7edf\u8f6f\u4ef6\u7684\u8fd0\u884c\u673a\u5236\u4e0e\u673a\u7406\u88ab\u63a9\u76d6\uff0c\u5176\u7a0b\u5e8f\u7684\u5f88\u591a\u83ab\u540d\u5176\u5999\u7684\u9519\u8bef\u8ba9\u6211\u4eec\u65e0\u6240\u9002\u4ece\u3002</p> <p>\u9762\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u65f6\u79cd\u79cd\u6027\u80fd\u74f6\u9888\u6211\u4eec\u675f\u624b\u65e0\u7b56\u3002\u6211\u4eec\u770b\u5230\u7684\u662f\u8fd9\u4e9b\u95ee\u9898\u7684\u73b0\u8c61\uff0c\u4f46\u662f\u5374\u5f88\u96be\u770b\u6e05\u672c\u8d28\uff0c\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u7684\u672c\u8d28\u5c31\u662f\u8f6f\u4ef6\u8fd0\u884c\u80cc\u540e\u7684\u673a\u7406\u53ca\u652f\u6491\u8f6f\u4ef6\u8fd0\u884c\u7684\u5404\u79cd\u5e73\u53f0\u548c\u5de5\u5177\uff0c\u5982\u679c\u80fd\u591f\u6df1\u5165\u4e86\u89e3\u8fd9\u4e9b\u673a\u5236\uff0c\u90a3\u4e48\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u5c31\u80fd\u591f\u6e38\u5203\u6709\u4f59\uff0c\u6536\u653e\u81ea\u5982\u4e86\u3002</p> <pre><code>    .c            .i            .s            .o           a.out\n+----+-------------+-------------+-------------+-----------+----+\n     + propressing + compilation + propressing +  linking  +\n     .             .             .             .     ^     .\n     |..... gcc -E |             |             |     |     .\n     |................... gcc -S |             |     |     .     +---------+\n     |................................. gcc -c | +---+---------+ | library |\n     .                                         .           .     +---------+\n     +-----------------------------------------+-----------+\n     |           compiler                      |   linker  |\n\n     1. scanner                                (symbol is address)\n     2. grammer parser\n     3. semantic analyser                      adress and storage allocation\n     4. source code optimizer\n          (generate intermediate code)         symbol resolution/binding\n     5. code generator\n          &amp; target code  optimizer             relocation\n</code></pre>"},{"location":"cs/essay/0013/#prepressing","title":"prepressing","text":"<p>\u9884\u7f16\u8bd1\u5904\u7406\u89c4\u5219\uff1a <pre><code>- \u5b8f\u5b9a\u4e49\u5c55\u5f00            #define\n- \u6761\u4ef6\u9884\u7f16\u8bd1\u6307\u4ee4\u5904\u7406     #if #ifdef #ifndef #elif #else #endif \n- \u9012\u5f52\u5305\u542b\u5c55\u5f00          #include\n- \u53bb\u9664\u6ce8\u91ca\u4fe1\u606f          // /* */\n- \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6   for debug\n- \u4fdd\u7559\u7f16\u8bd1\u5668\u6307\u4ee4        #progma\n</code></pre> \u53ef\u4ee5\u901a\u8fc7\u67e5\u770b .i \u6587\u4ef6\u5224\u65ad\u5b8f\u5b9a\u4e49\u6216\u5934\u6587\u4ef6\u662f\u5426\u5305\u542b\u6b63\u786e</p>"},{"location":"cs/essay/0013/#compilation","title":"compilation","text":"<p>\u7f16\u8bd1\u8fc7\u7a0b\u5c06 .i \u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u76ee\u6807\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\uff0c\u4ea7\u751f\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u3002</p>"},{"location":"cs/essay/0013/#assembly","title":"assembly","text":"<p>\u6c47\u7f16\u5668\u5c06\u6c47\u7f16\u4ee3\u7801\u53d8\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\uff0c\u6bcf\u4e00\u4e2a\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u5bf9\u5e94\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u6c47\u7f16\u5c31\u662f\u7ffb\u8bd1\u3002</p>"},{"location":"cs/essay/0013/#linking","title":"linking","text":"<p>\u628a\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u76f8\u4e92\u5f15\u7528\u7684\u90e8\u5206\u5904\u7406\u597d\uff0c\u4f7f\u5f97\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u80fd\u591f\u6b63\u786e\u5730\u8854\u63a5\u3002</p>"},{"location":"cs/essay/0013/#practice","title":"Practice","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    printf(\"Hello World!\\n\");\n    return 0;\n}\n</code></pre> <pre><code>$ gcc hello.c\n$ ./a.out\n\n\n$ gcc -E hello.c -o hello.i\n$ gcc -S hello.c -o hello.s\n$ gcc -c hello.c -o hello.o\n</code></pre>"},{"location":"cs/essay/0013/#refer","title":"refer","text":"<ul> <li>\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b - \u94fe\u63a5\u3001\u88c5\u8f7d\u548c\u5e93 chapter 2</li> </ul>"},{"location":"cs/lang/cpp/","title":"C++","text":""},{"location":"cs/lang/cpp/#_1","title":"\u57fa\u672c\u5f62\u6001","text":"<p>Quote</p> <p>\u4efb\u4f55\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u5177\u5907\u4e00\u7ec4\u516c\u5171\u7684\u8bed\u6cd5\u7279\u5f81\uff0c\u60f3\u8981\u5b66\u4e60\u5e76\u638c\u63e1\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u7406\u89e3\u5176\u8bed\u6cd5\u7279\u5f81\u7684\u5b9e\u73b0\u7ec6\u8282\u662f\u7b2c\u4e00\u6b65\u3002</p> \u7c7b\u578b\u53d8\u91cf\u8868\u8fbe\u5f0f\u8bed\u53e5\u51fd\u6570\u7c7b <p><pre><code>                                         x86_64 size   + 1 bool\n                                                       |\n                                                       | 1 char      +\n                                                       |             |\n                     + void                            | 2 short     |\n     + build-in type |                 + integral type |             |  signed\n     |               + arithmetic type |               | 4 int       |\ntype |                                 |               |             |  unsigned\n     |                                 |               | 8 long      |\n     + class type                      |               |             |\n                                       |               + 8 long long +\n                                       |\n                                       + floating+point type + 4 float\n                                                             |\n                                                             + 8 double\n</code></pre> \u9996\u5148\uff0c\u6709\u4e86\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u578b\uff0c\u81ea\u7136\u6d89\u53ca\u5230\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u9690\u5f0f\u5185\u7f6e\u7c7b\u578b\u8f6c\u6362\u603b\u662f\u4ece\u4f4e\u7cbe\u5ea6\u5411\u9ad8\u7cbe\u5ea6\u9760\u62e2\uff0c\u907f\u514d\u7cbe\u5ea6\u635f\u5931\uff0c\u8fd9\u662f\u7b26\u5408\u73b0\u5b9e\u7ecf\u9a8c\u7684\uff1b\u800c\u663e\u5f0f\u5185\u7f6e\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\u5e03\u5c14\u4e0e\u975e\u5e03\u5c14\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u3001\u6574\u6570\u548c\u6d6e\u70b9\u4e4b\u95f4\u7684\u8f6c\u6362\u3001\u65e0\u7b26\u53f7\u7c7b\u578b\u6ea2\u51fa\uff08\u53d6\u6a21\uff09\u3001\u6709\u7b26\u53f7\u7c7b\u578b\u6ea2\u51fa\uff08UB\uff09\uff0c\u5176\u89c4\u5219\u662f\u7b26\u5408\u76f4\u89c9\u7684\uff0c\u5176\u7ed3\u679c\u662f\u53ef\u4ee5\u81ea\u884c\u63a8\u5bfc\u7684\u3002</p> <p>\u5176\u6b21\uff0c\u56e0\u4e3a\u7c7b\u578b\u89e3\u91ca\u4e86\u6570\u636e\u6240\u5360\u7684 bit \u6570\u548c\u53d6\u503c\u8303\u56f4\uff0c\u56e0\u6b64\u53c8\u884d\u751f\u51fa\u4e86\u6807\u51c6\u5316\u7684\u6574\u6570\u7c7b\u578b\uff0c\u7528\u4e8e\u4e0d\u540c\u7684\u673a\u5668\u5e73\u53f0\u4e4b\u95f4\uff0c\u786e\u4fdd\u53ef\u79fb\u690d\u6027\u3002</p> <p>Todo</p> <p>\u4ec0\u4e48\u662f\u6807\u51c6\u5316\u7684\u6574\u6570\u7c7b\u578b</p> <p><pre><code>                               separate compilation +\n                                                    |\n                   + + extern  declaration          |\n                   | |                              |\n                   | + static  definition           +\n           + scope |\n           |       | global scope  ::\n           |       |\n           |       |             + inner scope      +------------------------------+\n           |       + block scope |                  |            type              |\n           |                     + outer scope      |       specifier   identifier |\n           |                                        |                              |\n           | compound type: &amp; *                     |             int   num;       |\nvariable   |                                        |                              |\n           |       + top-level                      | const    double   pi = 3.14; |\n           | const |                                +------------------------------+\n           |       + low-level   +--&gt;  const_cast\n           |\n           | constexpr\n           |\n           + type alias +  typedef\n                        |\n                        |  using\n                        |\n                        |  auto\n                        |\n                        +  decltype\n</code></pre> \u9996\u5148\u770b\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u3002\u5f00\u59cb\u53ea\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6\uff0c\u8303\u56f4\u5206\u4e3a global \u548c block\u3002\u6709\u4e86\u5206\u79bb\u5f0f\u7f16\u8bd1\u540e\uff0c\u4ea7\u751f\u4e86\u591a\u4e2a\u6e90\u6587\u4ef6\uff0c\u8865\u5145\u4e86 extern \u548c static\uff0c\u5206\u522b\u5c06\u4f5c\u7528\u57df\u9650\u5b9a\u4e3a\u8de8\u6587\u4ef6\u548c\u672c\u6587\u4ef6\u5185\u3002\u8fd9\u4e9b\u4f5c\u7528\u57df\u4e00\u5c42\u5c42\u5d4c\u5957\uff0c\u81ea\u7136\u4f1a\u4ea7\u751f\u8986\u76d6\uff0c\u8986\u76d6\u89c4\u5219\u59cb\u7ec8\u662f\u5185\u5c42\u8986\u76d6\u5916\u5c42\u3002\u4f8b\u5916\u60c5\u51b5\u662f\uff0cglobal \u4f5c\u7528\u57df\u6ca1\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528\u5de6\u4fa7\u4e3a\u7a7a\u7684\u57df\u4f5c\u7528\u7b26\uff08::\uff09\uff0c\u5728\u5185\u5c42\u5411\u5168\u5c40\u4f5c\u7528\u57df\u53d1\u51fa\u83b7\u53d6\u8bf7\u6c42\u3002</p> <p>\u63a5\u4e0b\u6765\u662f\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u5b83\u5728\u5185\u7f6e\u7c7b\u578b\u548c\u7c7b\u7c7b\u578b\u57fa\u7840\u4e0a\uff0c\u589e\u6dfb\u4e86 &amp; \u548c *\uff0c\u79f0\u4e3a\u590d\u5408\u7c7b\u578b\u3002\u6839\u636e\u73b0\u5b9e\u7ecf\u9a8c\uff0c\u53d8\u91cf\u5bf9\u5e94\u7740\u5e38\u91cf\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528 const \u548c constexpr \u58f0\u660e\u4e3a\u5e38\u91cf\uff0c\u5e38\u91cf\u5728\u7f16\u8bd1\u8fc7\u7a0b\u5c31\u53ef\u8ba1\u7b97\u51fa\u6765\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6539\u53d8\u3002\u7531\u4e8e\u6709\u4e86\u590d\u5408\u7c7b\u578b\u4e2d\u7684\u6307\u9488\uff0cconst \u5206\u4e3a top \u548c low \u4e24\u4e2a level\uff0c\u5206\u522b\u4fee\u9970\u7c7b\u578b\u672c\u8eab\u548c\u7c7b\u578b\u6307\u5411\u7684\u5bf9\u8c61\u3002</p> <p>\u53d8\u91cf\u7684\u7c7b\u578b\u6709\u65f6\u662f\u5982\u6b64\u7684\u590d\u6742\uff0c\u4e3a\u4e86\u7f16\u7a0b\u65b9\u4fbf\uff0c\u589e\u6dfb\u4e86 typedef \u548c using \u5bf9\u7c7b\u578b\uff08\u53ca\u5b83\u7684\u4fee\u9970\uff09\u53d6\u522b\u540d\uff0c\u589e\u6dfb\u4e86 auto \u548c decltype \u81ea\u52a8\u63a8\u5bfc\u548c\u83b7\u53d6\u53d8\u91cf\u7684\u7c7b\u578b\u3002</p> <p>\u6700\u4f73\u5b9e\u8df5</p> <p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u62f7\u8d1d\u5c31\u662f\u5f00\u9500\u3002\u5bf9\u4e8e string\u3001\u6807\u51c6\u5e93\u5bb9\u5668\u3001\u81ea\u5b9a\u4e49\u7684\u7c7b\u7c7b\u578b\uff0c\u5728\u4f20\u9012\u53c2\u6570\u65f6\u5c3d\u91cf\u4f7f\u7528\u5f15\u7528\uff08&amp;\uff09\uff0c\u5e76\u6839\u636e\u9700\u8981\u6307\u5b9a\u4e3a top-level const\u3002</p> <pre><code>                      + arithmetic          +  -  *  /  %\n                      |\n                      | relational          &lt; &lt;=  &gt; &gt;= == !=\n                      |\n                      | logical            &amp;&amp; ||  !\n                      |\n                      | bit                 &amp;  |  ~  ^ &lt;&lt; &gt;&gt;\n                      |\n                      | assign              =\n                      |\n                      | compound assign    arithmetic=  bit(not ~)=\n                      |\n                      | increase/decrease  ++ --\n                      |\n           + operator | member access      -&gt;  .\n           |          |\n           |          | condition          ? :\n           |          | \n           |          | sizeof             sizeof()\n           |          |\nexpression |          + comma               ,\n           |\n           |\n           |\n           + operand\n</code></pre> <p>\u8868\u8fbe\u5f0f\u4e2d\u5982\u679c\u6709\u591a\u4e2a\u8fd0\u7b97\u7b26\uff0c\u600e\u4e48\u5224\u65ad\u6c42\u503c\u987a\u5e8f\uff1f\u53bb\u80cc\u90a3\u4e9b\u4f18\u5148\u7ea7\u5417\uff1f\u4e0d\uff0c\u4e0d\u8981\u8fd9\u6837\uff0c\u4ee3\u7801\u662f\u5199\u7ed9\u4eba\u770b\u7684\uff0c\u53ea\u662f\u987a\u5e26\u80fd\u5728\u673a\u5668\u4e0a\u8fd0\u884c\u3002\u7528\u62ec\u53f7\u5f3a\u5236\u8ba9\u8868\u8fbe\u5f0f\u7684\u7ec4\u5408\u5173\u7cfb\u6309\u7167\u7a0b\u5e8f\u903b\u8f91\u7684\u8981\u6c42\u3002</p> <p>\u5173\u4e8e\u9012\u589e\u9012\u51cf\u8fd0\u7b97\u7b26\uff0c\u603b\u662f\u6709\u7740\u524d\u7f6e\u8fd8\u662f\u540e\u7f6e\u7684\u4e89\u8bba\u3002\u5c3d\u91cf\u524d\u7f6e\uff0c\u56e0\u4e3a\u540e\u7f6e\u4f1a\u4e34\u65f6\u5b58\u50a8\u4e00\u4efd\u539f\u59cb\u503c\u3002</p> <p><pre><code>           + block{ }\n           |                                      return   +\nstatements | expression                                    |\n           |                          + if     +           |\n           | null(;)         + branch |        |  break    |\n           |                 |        + switch |           |\n           + flow of control |                 |  continue |\n                    +        |         + while |           |\n                    v        + iterate |       |  goto     +\n                condition              + for   +\n              +------------+\n              true     false\n</code></pre> \u8bed\u53e5\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u4e3a\u4e86\u6ee1\u8db3\u73b0\u5b9e\u9700\u8981\uff0c\u81ea\u7136\u800c\u7136\u51fa\u73b0\u4e86\u63a7\u5236\u6d41\uff0c\u591a\u7ec4 if \u884d\u751f\u51fa switch\uff0cwhile \u884d\u751f\u51fa for\u3001do-while\u3002\u518d\u540e\u6765\uff0c\u51fa\u73b0\u4e86\u5bf9\u63a7\u5236\u6d41\u672c\u8eab\u7684\u63a7\u5236\uff0cbreak\u3001continue\u3001goto\u3002</p> <p>c++11 \u4e2d\uff0c\u4e3a\u4e86\u66f4\u65b9\u4fbf\u5730\u4f7f\u7528\u5f15\u7528\uff0c\u53c8\u8fdb\u4e00\u6b65\u5bf9\u539f\u59cb for \u5347\u7ea7\u4e3a range-for\uff0c\u51cf\u8f7b\u4e86\u7f16\u7a0b\u8d1f\u62c5\u3002</p> <p>\u6700\u4f73\u5b9e\u8df5</p> <pre><code>for (const auto &amp;s : vecStr) {\n    ...\n}\n</code></pre> <pre><code>                     return type +-----------------+\n                     +   function name             +--------&gt; function type\n                     |   +   parameter list +------+\n                     +   +   +\nfunction prototype   int main(int argc, char *argv[])\n                     {\n                         return 0;\n                     }\n\n                   + void reset(int &amp;i) { } // passed by reference  ++ candidate function\nfunction overload  |                                                ||\n                   + void reset(int *i) { }                         +| viable function\n                                                                     |\n              inline void reset(int  i) { } // passed by value       v best match\n</code></pre> <p>\u53d8\u91cf\u6709\u7c7b\u578b\uff0c\u51fd\u6570\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\uff1f\u662f\u5b83\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u5f62\u53c2\u5217\u8868\u3002\u6709\u4e86\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u81ea\u7136\u8fc7\u6e21\u5230\u51fd\u6570\u6307\u9488\u3002</p> <p>\u53d8\u91cf\u6709\u7c7b\u578b\uff0c\u6570\u7ec4\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\uff1f\u662f\u5b83\u7684\u5143\u7d20\u7c7b\u578b\u548c\u7ef4\u5ea6\u3002\u6709\u4e86\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u81ea\u7136\u8fc7\u6e21\u5230\u6570\u7ec4\u6307\u9488\u3002</p> <p>\u51fd\u6570\u7c7b\u578b\u7531\u8fd4\u56de\u7c7b\u578b\uff08rt\uff09\u548c\u5f62\u53c2\u5217\u8868\uff08pl\uff09\u7ec4\u6210\u3002C \u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u540d\u662f\u533a\u522b\u4e0d\u540c\u51fd\u6570\u7684\u6807\u51c6\uff0c\u53ea\u8981\u5b9a\u4e49\u65f6\uff0c\u51fd\u6570\u540d\u91cd\u590d\u51fa\u73b0\u4e86\uff0c\u7f16\u8bd1\u5c31\u4f1a\u5931\u8d25\u3002\u5728 C++ \u4e2d\uff0c\u8fd9\u4e2a\u5224\u5b9a\u8303\u56f4\u6269\u5927\u4e86\uff0c\u7531\u51fd\u6570\u540d\u548c\u5f62\u53c2\u5217\u8868\u5171\u540c\u4f5c\u4e3a\u533a\u522b\u51fd\u6570\u7684\u6807\u51c6\u3002\u4e8e\u662f\uff0c\u8fd9\u4e2a\u7279\u6027\u88ab\u53eb\u505a \u201c\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u201d\u3002\uff08\u9a8c\u8bc1\u65b9\u6cd5 <code>nm a.out | grep \" T \" | c++filt</code>\uff09</p> <pre><code>               non-member function +\n                                   | interface for user\n                          + public +--\n                          |           \\                    + delegating\n        + member function | protecte   \\     + constructor |\n        |                 |             -----+             + converting\n  class |                 + private          + destructor\n    ^   |\n    |   + data member\n    |\n+---+----+\n| friend |\n+--------+\n</code></pre> <p>C++ \u7684\u7c7b\u88ab\u8bbe\u8ba1\u51fa\u6765\uff0c\u533a\u522b\u4e8e C\uff0c\u600e\u4e48\u5f3a\u5236\u7528\u6237\u4f7f\u7528\u63a5\u53e3\uff1f\u8bbe\u7f6e\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u5c06\u5c5e\u4e8e public \u7684\u6210\u5458\u51fd\u6570\u4f5c\u4e3a\u63a5\u53e3\uff0c\u4f9b\u7528\u6237\u8bbf\u95ee\u3002</p> <p>\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u6570\u636e\u6210\u5458\uff0c\u81ea\u7136\u800c\u7136\u5f15\u51fa\u4e86 this \u6307\u9488\u3002\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u4e2a this \u6307\u9488\u80fd\u4e0d\u80fd\u88ab\u4fee\u6539\uff1f\u6216\u8005\u8fd9\u4e48\u8bf4\uff0c\u4fee\u6539 this \u6307\u9488\u7b26\u4e0d\u7b26\u5408\u5e38\u7406\uff1f\u4fee\u6539\u4e86\u6709\u4ec0\u4e48\u7528\u5904\uff1f\u6ca1\u6709\u597d\u5904\uff0c\u53cd\u800c\u4f1a\u7834\u574f\u7a0b\u5e8f\u7684\u7a33\u5b9a\u6027\uff0c\u56e0\u6b64\uff0cthis \u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002</p> <p>\u7ee7\u7eed\u63a8\u5bfc\uff0cthis \u6307\u9488\u662f\u5e38\u91cf\u6307\u9488\uff0c\u4f46\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u3002\u4e8e\u662f\uff0c\u53c8\u6253\u4e86\u4e00\u4e2a\u53ef\u9009\u8865\u4e01\uff0c\u53ef\u4ee5\u5728\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u540e\u9762\u6dfb\u52a0 const\uff0c\u8868\u660e\u8be5\u6210\u5458\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539 this \u6307\u9488\u7684\u5bf9\u8c61\u3002</p> <p>\u56de\u5230\u63a5\u53e3\uff0c\u9664\u4e86 public \u90e8\u5206\u7684\u6210\u5458\u51fd\u6570\uff0c\u8fd8\u5305\u62ec\u7c7b\u5916\u7684\u975e\u9759\u6001\u51fd\u6570\uff0c\u5b83\u4eec\u4e2d\u6709\u90e8\u5206\u53ef\u4f5c\u4e3a\u53cb\u5143\u76f4\u63a5\u8bbf\u7c7b\u7684\u6570\u636e\u3002\u6bd4\u5982 B \u6307\u5b9a\u4e86 A \u4f5c\u4e3a\u53cb\u5143\uff0cA \u5c31\u80fd\u8bbf\u95ee B \u7684\u4e00\u5207\uff0c\u53cd\u8fc7\u6765\u4e0d\u53ef\u4ee5\u3002\u6211\u89c9\u5f97\u8fd9\u4e0d\u80fd\u53eb\u53cb\u5143\uff0c\u8fd9\u540d\u5b57\u592a\u56f0\u60d1\u4e86\uff0c\u5e94\u8be5\u53eb\u4e0a\u7ea7\u3002\u5e76\u4e14\u5b83\u4e0d\u5177\u5907\u4f20\u9012\u6027\uff0c\u4e5f\u5c31\u662f\u6211\u4e0a\u7ea7\u7684\u4e0a\u7ea7\u4e0d\u662f\u6211\u7684\u4e0a\u7ea7\u3002\u5b66\u4e60\u8bed\u8a00\u6709\u8da3\u7684\u4e00\u70b9\u662f\u9664\u4e86\u770b\u5b83\u652f\u6301\u54ea\u4e9b\uff0c\u8fd8\u770b\u5b83\u4e3a\u4ec0\u4e48\u505c\u7559\u4f4f\uff0c\u800c\u4e0d\u7ee7\u7eed\u4e0d\u652f\u6301\u66f4\u591a\u3002\u4f30\u8ba1\u7f16\u8bd1\u5668\u4e5f\u4e0d\u60f3\u5934\u75bc\u3002</p> <p>\u6210\u5458\u51fd\u6570\u7684\u58f0\u660e\u5728\u7c7b\u5185\uff0c\u800c\u5b9a\u4e49\u53ef\u4ee5\u653e\u5230\u7c7b\u5916\u3002\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u7c7b\u5916\u7684\u5b9a\u4e49\u662f\u600e\u4e48\u77e5\u9053 this \u6307\u9488\u7684\uff1f\u6709\u4e00\u4e2a\u7c7b\u7684\u57df\u4f5c\u7528\u7b26\uff0c\u6253\u8fd9\u5f00\u59cb\u5230\u5b9a\u4e49\u7ed3\u675f\uff0c\u90fd\u662f this \u7684\u4f5c\u7528\u8303\u56f4\u3002\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u5c31\u662f\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f\u7c7b\u5185\u58f0\u660e\u7684\uff0c\u9700\u8981\u8d39\u70b9\u795e\uff0c\u518d\u7528\u4e00\u6b21\u7c7b\u7684\u57df\u4f5c\u7528\u7b26\u3002</p> <p>\u6700\u540e\u662f\u6784\u9020\u51fd\u6570\uff0c\u5b83\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u540d\u5c31\u662f\u7c7b\u540d\uff0c\u56e0\u6b64\u53ea\u5269\u4e0b\u5f62\u53c2\u5217\u8868\u548c\u6570\u636e\u6210\u5458\u7684\u521d\u59cb\u5316\u53ef\u4ee5\u8ba8\u8bba\u3002\u6570\u636e\u6210\u5458\u521d\u59cb\u5316\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u6765\u3002\u5f62\u53c2\u5217\u8868\u53c8\u884d\u751f\u51fa\u59d4\u6258\u548c\u8f6c\u6362\uff0c\u90fd\u662f\u7b80\u5316\u4ee3\u7801\u590d\u6742\u5ea6\u3002\u59d4\u6258\u5c31\u662f\u501f\u7528\u67d0\u4e2a\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u52a0\u70b9\u81ea\u5df1\u7684\u7406\u89e3\uff0c\u5f62\u6210\u7684\u53c8\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002\u8f6c\u6362\u5c31\u662f\u7528\u5f62\u53c2\u6784\u9020\u4e2d\u95f4\u5bf9\u8c61\uff0c\u4e2d\u95f4\u5bf9\u8c61\u53ef\u4ee5\u5230\u6700\u7ec8\u7ed3\u679c\u3002</p>"},{"location":"cs/lang/cpp/#_2","title":"\u6807\u51c6\u5e93","text":"<p>Quote</p> <p>\u6807\u51c6\u5e93\u7684\u6838\u5fc3\u662f\u5f88\u591a\u5bb9\u5668\u7c7b\u548c\u4e00\u5806\u6cdb\u578b\u7b97\u6cd5\u3002</p> I/O \u7c7b\u987a\u5e8f\u5bb9\u5668\u5173\u8054\u5bb9\u5668\u6cdb\u578b\u7b97\u6cd5\u52a8\u6001\u5185\u5b58 <pre><code>         +  istream        * buffer refresh mechanism\niostream |\n         +  ostream *\n                                 + in    out\n         +  ifstream       +     |\nfstream  |                 +-----+ app   ate\n         +  ofstream *     +     |\n                                 + trunc binary\n         +  istringstream\nsstream  |\n         +  ostringstream *\n</code></pre> <p>I/O \u6700\u57fa\u672c\u7684\u662f\u8bfb\u5199\u6d41\u72b6\u6001\u7684 iostream\uff0c\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\uff0c\u51fa\u73b0\u4e86\u8bfb\u5199\u547d\u540d\u6587\u4ef6\u7684 fstream \u548c \u8bfb\u5199\u5185\u5b58 string \u5bf9\u8c61\u7684 sstream\u3002</p> <p>I/O \u5bf9\u8c61\u6709\u72b6\u6001\uff0c\u5982 eof\u3001fail\u3001bad \u7b49\uff0c\u53c8\u6709\u4e86\u5bf9\u72b6\u6001\u7684\u7ba1\u7406\uff0c\u5982 clear\u3001setstate \u7b49\u3002</p> <p>I/O \u7684\u5199\u64cd\u4f5c\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\uff0c\u4e8e\u662f\u5f97\u60f3\u4e2a\u529e\u6cd5\u907f\u514d\u9891\u7e41\u5199\u6d41\u5bf9\u8c61\uff0c\u8fd9\u5c31\u6709\u4e86\u5199\u7f13\u51b2\u3002\u56f4\u7ed5\u5199\u7f13\u51b2\uff0c\u51fa\u73b0\u4e86\u7f13\u51b2\u5237\u65b0\u673a\u5236\u3002\u8003\u8651\u4e00\u4e0b\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9700\u8981\u5237\u65b0\u5462\uff1f\u9ed8\u8ba4\u6709\u7f13\u51b2\u533a\u6ee1\u4e86\u3001\u6d41\u7ed3\u675f\u4e86\uff0c\u53ef\u4ee5\u4eba\u4e3a\u5e72\u9884\u7684\u662f\u8f93\u51fa\u6d41\u88ab\u5173\u8054\u5230\u8f93\u5165\u3001\u6307\u5b9a endl \u5237\u65b0\u3001\u8bbe\u7f6e unitbuf\u3002</p> <pre><code>\n</code></pre>"},{"location":"cs/lang/cpp/#_3","title":"\u9762\u5411\u5bf9\u8c61","text":""},{"location":"cs/lang/cpp/#_4","title":"\u6a21\u677f","text":""},{"location":"cs/lang/cpp/#_5","title":"\u7591\u95ee","text":"<p>\u6765\u81ea \u57fa\u672c\u5f62\u6001-\u53d8\u91cf-\u590d\u5408\u7c7b\u578b-\u6307\u9488\uff1ac++11 \u4e3a\u4ec0\u4e48\u8981\u5f15\u5165 nullptr\uff1f</p> <p>\u6765\u81ea \u57fa\u672c\u5f62\u6001-\u8868\u8fbe\u5f0f-\u64cd\u4f5c\u7b26\uff1a\u4e3a\u4ec0\u4e48 sizeof(void) == 1 ?</p> <p>\u6765\u81ea \u57fa\u672c\u5f62\u6001-\u7c7b-\u6784\u9020\u51fd\u6570\uff1a\u4e3a\u4ec0\u4e48\u6784\u9020\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\uff1f</p> <p>\u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4ee3\u8868\u7528\u6237\u53ef\u4ee5\u968f\u610f\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5371\u9669\u7684\uff01</p> <p>\u6765\u81ea \u6807\u51c6\u5e93-I/O \u7c7b\uff1a\u4e3a\u4ec0\u4e48\u6d41\u5bf9\u8c61\u4e0d\u80fd\u62f7\u8d1d\uff1f</p> <p>\u4ec0\u4e48\u662f\u6d41\uff1f\u5b83\u53ea\u662f\u4f9b\u6570\u636e\u901a\u8fc7\u7684\u901a\u9053\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u6570\u636e\u3002\u5047\u8bbe\u6d41\u5bf9\u8c61\u53ef\u4ee5\u62f7\u8d1d\uff0c\u4f46\u4fe1\u53f7\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u4f1a\u4f7f\u4f60\u6536\u5230\u4e24\u6b21\u4fe1\u53f7\u5417\uff1f\u56e0\u6b64\u8fd9\u79cd\u62f7\u8d1d\u6ca1\u6709\u610f\u4e49\u3002</p>"},{"location":"cs/tool/","title":"\u81ea\u52a8\u5316\u5de5\u5177","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u4e9b\u5de5\u5177\uff1f</p> <p>\u8ba1\u7b97\u673a\u8bbe\u8ba1\u7684\u521d\u8877\u5c31\u662f\u4efb\u52a1\u81ea\u52a8\u5316\u3002</p> <p>\u4efb\u52a1\u81ea\u52a8\u5316\uff1a</p> <ul> <li>\u6309\u7167\u666e\u901a\u7684\u8def\u5f84\u8d70\u4e00\u904d\uff0c\u7b80\u5316\u5b83</li> <li>\u8bbe\u8ba1\u81ea\u52a8\u5316\u6d41\u7a0b</li> <li>\u9009\u53d6\u5408\u9002\u7684\u5de5\u5177\u7ec4\u5408\uff0c\u5b9e\u73b0\u8fd9\u5957\u6d41\u7a0b</li> </ul> <p>\u8fc7\u7a0b\u4e2d\uff0c\u8bf7\u628a\u5173\u6ce8\u7684\u91cd\u70b9\u653e\u5728\u8981\u5b8c\u6210\u7684\u4e8b\u60c5\u4e0a\uff0c\u800c\u4e0d\u662f\u628a\u91cd\u70b9\u653e\u5728\u5de5\u5177\u4e0a\u3002</p> <p>\u5982\u679c\u7f3a\u5de5\u5177\u4e86\uff0c\u8bf7\u5728 \u79d8\u5bc6\u77e5\u8bc6\u4e4b\u4e66 \u5185\u67e5\u627e\uff0c\u6216\u8bb8\u4f1a\u6709\u8d81\u624b\u7684\u5de5\u5177\uff01</p>"},{"location":"cs/tool/shell/","title":"Zsh","text":"<p>Abstract</p> <p>\u4ecb\u7ecd\u4e00\u4e9b shell \u73af\u5883\u4e0b\u5e38\u7528\u7684\u64cd\u4f5c\uff0c\u548c zsh \u7684\u642d\u914d\u7528\u6cd5\u3002</p>"},{"location":"cs/tool/shell/#1","title":"1. \u547d\u4ee4\u884c\u5783\u573e\u6876","text":"<p>\u7528\u60ef\u4e86 Windows \u7684\u4eba\uff0c\u521a\u63a5\u89e6 Linux \u65f6\uff0c\u5370\u8c61\u6700\u6df1\u523b\u7684\u4e8b\u60c5\u4e2d\u4f30\u8ba1\u6709\u8fd9\u4e48\u4e00\u6761\uff0crm \u5220\u9664\u6587\u4ef6\u540e\uff0c\u65e0\u6cd5\u6062\u590d\u3002</p> <p>\u8fd9\u65f6\u5019\u5b89\u88c5\u4e00\u4efd trash-cli\uff0c\u5e76\u91cd\u547d\u540d\u4e0b rm \u6216\u8bb8\u4f1a\u597d\u5f97\u591a\u3002</p> <pre><code># ~/.zshrc\nalias rm=\"trash\"\nalias rr=\"trash-restore\"\n</code></pre>"},{"location":"cs/tool/shell/#2","title":"2. \u914d\u7f6e\u6846\u67b6","text":"<p>ohmyzsh \u7528\u6765\u7ba1\u7406 zsh \u914d\u7f6e\uff0c\u5b83\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\uff0c\u5305\u62ec emmm\uff0c\u603b\u4e4b\u5f88\u591a\u3002</p> <p>\u53ef\u4ee5\u4ece zsh \u63d2\u4ef6\u5217\u8868 \u4e2d\u88c5\u914d\u9002\u5408\u81ea\u5df1\u5de5\u4f5c\u6d41\u7684\u63d2\u4ef6\u3002</p>"},{"location":"cs/tool/shell/#21","title":"2.1 \u547d\u4ee4\u8865\u5168","text":"<p>\u7ec8\u7aef\u4e0b\u8c01\u80fd\u51cf\u5c11\u91cd\u590d\u6572\u547d\u4ee4\u7684\u6b21\u6570\uff1f</p> <p>zsh \u7684 zsh-autosuggestions \u63d2\u4ef6\u53ef\u4ee5\u6839\u636e\u5386\u53f2\u8bb0\u5f55\u8865\u5168\u547d\u4ee4\uff0c\u53ea\u9700\u8981\u6572\u51fa\u524d\u51e0\u4e2a\u5b57\u6bcd\uff0c\u5c31\u4f1a\u5339\u914d\u5230\u6700\u8fd1\u4e00\u6b21\u76f8\u5339\u914d\u7684\u547d\u4ee4\u3002</p> <p>\u9664\u4e86\u524d\u7f00\u67e5\u627e\uff0c\u5927\u591a\u6570 Shell \u652f\u6301\u5b50\u4e32\u67e5\u627e\uff0c\u4f7f\u7528 Ctrl + r \uff0c\u63a5\u7740\u8f93\u5165\u5b50\u4e32\uff0c\u56de\u8f66\u6267\u884c\u3002</p>"},{"location":"cs/tool/shell/#22","title":"2.2 \u76ee\u5f55\u8df3\u8f6c","text":"<p>\u7ec8\u7aef\u4e0b\u8c01\u80fd\u907f\u514d\u8bb0\u5fc6\u53c8\u957f\u53c8\u81ed\u7684\u8def\u5f84\uff1f</p> <p>zsh \u7684 autojump \u63d2\u4ef6\u53ef\u4ee5\u6839\u636e\u5386\u53f2\u9891\u7387\u8df3\u8f6c\u5230\u8def\u5f84\uff0c\u53ea\u9700\u8981\u6572\u51fa\u51e0\u4e2a\u5b57\u6bcd\uff0c\u5c31\u4f1a\u5339\u914d\u5230\u53bb\u8fc7\u9891\u7387\u6700\u9ad8\u7684\u8def\u5f84\u4e0b\u3002</p>"},{"location":"cs/tool/shell/#3","title":"3. \u76ee\u5f55\u6d4f\u89c8","text":"<p>ranger \u8fd9\u4e2a\u547d\u4ee4\u8fd8\u6ca1\u7528\u719f......</p>"},{"location":"cs/tool/shell/#4","title":"4. \u8fdc\u7a0b\u8fde\u63a5","text":"<p>\u7ec8\u7aef\u4e0b\u6700\u5e38\u89c1\u7684\u64cd\u4f5c\u5c31\u662f\u8fdc\u7a0b\u5230\u670d\u52a1\u5668\uff0c\u4e00\u6b21\u6b21\u8f93\u5165\u5bc6\u7801\u65e2\u4e0d\u5b89\u5168\uff0c\u4e5f\u8ba9\u4eba\u6bd4\u8f83\u5934\u75bc\u3002</p> <p>\u4f7f\u7528 ssh-keygen \u751f\u6210\u79c1\u94a5\u548c\u516c\u94a5\uff0c\u767b\u8bb0\u79c1\u94a5\u5230\u672c\u5730\u7684 ssh \u914d\u7f6e\u6587\u4ef6\u91cc\uff0c\u53d1\u9001\u516c\u94a5\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff08\u9700\u8981\u8f93\u5165\u4e00\u6b21\u5bc6\u7801\uff09\uff0c\u8fd9\u6837\u540e\u9762\u518d\u8fde\u63a5\u8fdc\u7a0b\u670d\u52a1\u5668\u65f6\uff0c\u5c31\u505a\u5230\u4e86\u514d\u5bc6\u767b\u9646\u3002</p> <p>\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <pre><code># 1. \u751f\u6210\u79c1\u94a5\u548c\u516c\u94a5\n$ ssh-keygen -t rsa -f ecs\n\n# 2. \u79c1\u94a5\u767b\u8bb0\u5230\u672c\u5730 ssh \u914d\u7f6e\u6587\u4ef6\n$ vim ~/.ssh/config\n\nHost ecs\n    HostName xx.xx.xx.xx\n    User user-name\n        IdentityFile ~/.ssh/server/ecs\n\nHost ecs2\n    HostName xx.xx.xx.xx\n    User user-name\n        IdentityFile ~/.ssh/server/ecs2\n\n# 3. \u53d1\u9001\u516c\u94a5\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\n$ ssh-copy-id -i ecs.pub  user-name@xx.xx.xx.xx\n\n# 4. \u514d\u5bc6\u8fde\u63a5\n$ ssh ecs\n</code></pre>"},{"location":"cs/tool/shell/#5","title":"5. \u8fdc\u7a0b\u540c\u6b65","text":"<p>\u8fdc\u7a0b\u8fde\u63a5\u5230\u6d4b\u8bd5\u670d\u52a1\u5668\u540e\uff0c\u5f00\u53d1\u73af\u5883\u7684\u8d44\u6599\u5e38\u5e38\u9700\u8981\u540c\u6b65\u4e0a\u53bb\u3002rsync \u652f\u6301\u589e\u91cf\u5907\u4efd\uff0c\u8fd9\u4e00\u70b9\u5bf9\u7a0b\u5e8f\u5f00\u53d1\u6781\u4e3a\u53cb\u5584\u3002</p> <pre><code>$ rsync -av src ecs:/code/\n\n# -a             \u9012\u5f52\u540c\u6b65\u6587\u4ef6\u5143\u4fe1\u606f\n# -v             \u4f20\u8f93\u65e5\u5fd7\u663e\u793a\u5230\u7ec8\u7aef\n# -n             \u6a21\u62df\u6267\u884c\n# --delete       \u540c\u6b65\u65f6\uff0c\u8fdc\u7a0b\u5c06\u5220\u9664\u672c\u5730\u4e2d\u6ca1\u6709\u7684\u6587\u4ef6\n# --link-desk    \u6307\u5b9a\u57fa\u51c6\u76ee\u5f55\uff0c\u7136\u540e\u589e\u91cf\u5907\u4efd\n# --exclude=path \u540c\u6b65\u65f6\u6392\u9664 path \u6587\u4ef6\u5939\n# ...\n</code></pre> <p>rsync \u53ef\u4ee5\u672c\u5730\u5230\u672c\u5730\u540c\u6b65\uff0c\u672c\u5730\u548c\u8fdc\u7a0b\u4e4b\u95f4\u540c\u6b65\uff0c\u4f46\u8fdc\u7a0b\u5230\u8fdc\u7a0b\u4e4b\u95f4\u9700\u8981\u4e00\u4e2a\u89e6\u53d1\u673a\u5236\u3002</p> <p>\u6b63\u597d\uff0cLinux \u5185\u6838\u6709 inotify \u529f\u80fd\uff0c\u53ef\u4ee5\u76d1\u89c6\u6587\u4ef6\u7cfb\u7edf\u7684\u66f4\u6539\u3002\u800c\u4e14 inotify-tools \u4e2d\u7684 inotifywait \u548c inotifywatch \u53ef\u4ee5\u76f4\u63a5\u7528\u5728 shell \u811a\u672c\u91cc\u3002</p> <p>\u8fd9\u6837\uff0c\u501f\u52a9 inotify \u8fd9\u4e2a\u89e6\u53d1\u5668\uff0crsync \u4e5f\u80fd\u591f\u5728\u8fdc\u7a0b\u4e0e\u8fdc\u7a0b\u4e4b\u95f4\u540c\u6b65\u4e86\u3002</p>"},{"location":"cs/tool/task/","title":"Taskwarrior","text":"<p>Abstract</p> <p>\u5f8b\u9053\u6740\u62db\u2014\u2014\u4e95\u4e95\u6709\u6761\uff0c\u901a\u8fc7\u547d\u540d\u884c\u7ba1\u7406 TODO \u5217\u8868\u3002</p>"},{"location":"cs/tool/task/#_1","title":"\u57fa\u672c\u529f\u80fd","text":"<ul> <li><code>task next</code> \u5217\u51fa task</li> <li><code>task add</code> \u6dfb\u52a0 task</li> <li><code>task done</code> \u5b8c\u6210 task</li> <li><code>task delete</code> \u5220\u9664 task</li> </ul>"},{"location":"cs/tool/tmux/","title":"Tmux","text":"<p>Quote</p> <p>\u9f20\u6807\u6b63\u5728\u62d6\u6162\u4f60\u7684\u901f\u5ea6\uff01</p> <p>\u6309\u952e\u7ea6\u5b9a\uff1a\u5982 &lt;C-a&gt; c \u6309\u952e\u7ec4\u5408\uff0c\u9700\u8981\u5148\u6309\u4e0b Ctrl \u548c a\uff0c\u677e\u5f00\u540e\u518d\u6309\u4e0b c\u3002</p> <p>\u547d\u4ee4\u524d\u7f00\uff1a\u5982\u679c\u7a0b\u5e8f\u662f\u5728 tmux \u73af\u5883\u4e2d\u8fd0\u884c\u7684\uff0c\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u544a\u8bc9 tmux\uff0c\u67d0\u4e2a\u64cd\u4f5c\u662f tmux \u53bb\u505a\u800c\u4e0d\u662f\u7a0b\u5e8f\u53bb\u505a\uff0c\u8fd9\u5c31\u662f\u524d\u7f00\u952e\u7684\u4f5c\u7528\u3002\u5728\u8fd9\u91cc\uff0c\u5c06\u524d\u7f00\u8bbe\u7f6e\u6210 &lt;C-a&gt;\u3002</p> <p>\u5173\u4e8e Ctrl \u952e\u4f4d</p> <p>Windows \u4e0b\u53ef\u4ee5\u4fee\u6539\u6ce8\u518c\u8868\uff0c\u4ea4\u6362 CapsLk \u548c Ctrl\u3002</p> <p>Manjaro \u5728 setting \u91cc\u914d\u7f6e\uff0c\u4ea4\u6362 CapsLk \u548c Ctrl\u3002</p> <p>\u8fd9\u6837\u4e00\u6765\uff0c&lt;C-a&gt; \u5c06\u662f\u4e24\u4e2a\u5728\u7269\u7406\u4f4d\u7f6e\u4e0a\u8fde\u7eed\u7684\u6309\u952e\u3002</p>"},{"location":"cs/tool/tmux/#_1","title":"\u57fa\u7840\u7528\u6cd5","text":"<p>tmux \u4e09\u4e2a\u5173\u952e\u6982\u5ff5\u5c42\u5c42\u5d4c\u5957\uff1a\u4f1a\u8bdd-\u7a97\u53e3-\u9762\u677f</p> <ul> <li>\u4f1a\u8bdd\uff1a\u6bcf\u4e2a\u4f1a\u8bdd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5de5\u4f5c\u533a\uff0c\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u7a97\u53e3<ul> <li><code>tmux</code> \u542f\u52a8\u4e00\u4e2a\u65b0\u4f1a\u8bdd</li> <li><code>tmux ls</code> \u5217\u51fa\u6240\u6709\u4f1a\u8bdd</li> <li><code>tmux attach -t N</code> \u767b\u5165\u5e8f\u53f7\u4e3a N \u7684\u4f1a\u8bdd</li> <li><code>tmux a</code> \u767b\u5165\u6700\u540e\u4e00\u4e2a\u4f1a\u8bdd</li> <li><code>tmux kill-session -t N</code> \u6740\u6b7b\u5e8f\u53f7\u4e3a N \u7684\u4f1a\u8bdd</li> </ul> </li> <li>\u7a97\u53e3\uff1a\u6bcf\u4e2a\u7a97\u53e3\u76f8\u5f53\u4e8e\u6d4f\u89c8\u5668\u4e2d\u7684\u6807\u7b7e\u9875\uff0c\u53ef\u4ee5\u5206\u5272\u6210\u591a\u4efd\u9762\u677f<ul> <li><code>&lt;C-a&gt; w</code> \u5217\u51fa\u6240\u6709\u7a97\u53e3</li> <li><code>&lt;C-a&gt; N</code> \u8df3\u8f6c\u5230\u7b2c N \u4e2a\u7a97\u53e3</li> <li><code>&lt;C-a&gt; c</code> \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3</li> <li><code>&lt;C-a&gt; ,</code> \u91cd\u547d\u540d\u7a97\u53e3</li> <li><code>&lt;C-d&gt;</code> \u5173\u95ed\u7a97\u53e3</li> <li><code>&lt;C-a&gt; &lt;C-c&gt;</code> \u521b\u5efa\u65b0\u4f1a\u8bdd</li> <li><code>&lt;C-a&gt; d</code> \u4e34\u65f6\u767b\u51fa\u5f53\u524d\u4f1a\u8bdd</li> </ul> </li> <li>\u9762\u677f\uff1a\u9762\u677f\u5c06\u4e00\u4e2a\u7a97\u53e3\u5206\u5272\u4e3a\u591a\u4e2a\u533a\u57df\uff0c\u6bcf\u4e2a\u9762\u677f\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u4ea4\u4e92\u5f0f shell \u754c\u9762<ul> <li><code>&lt;C-a&gt; -</code> \u6c34\u5e73\u5206\u5272</li> <li><code>&lt;C-a&gt; _</code> \u5782\u76f4\u5206\u5272</li> <li><code>&lt;C-a&gt; &lt;\u65b9\u5411&gt;</code> \u5207\u6362\u5230\u6307\u5b9a\u9762\u677f</li> <li><code>&lt;C-a&gt; &lt;C-\u65b9\u5411&gt;</code> \u8c03\u6574\u9762\u677f\u8fb9\u754c </li> <li><code>&lt;C-a&gt; z</code> \u7f29\u653e\uff08zoom\uff09/\u6062\u590d \u9762\u677f</li> <li><code>&lt;C-a&gt; [</code> \u56de\u6eda\u5c4f\u5e55 </li> </ul> </li> </ul>"},{"location":"cs/tool/tmux/#_2","title":"\u7ed3\u5bf9\u7f16\u7a0b","text":"<p>\u4f7f\u7528 tmux \u7ed3\u5bf9\u7f16\u7a0b\u7684\u539f\u7406\u8ddf\u7b80\u5355\uff0c\u53ea\u8981\u4e24\u4eba\u767b\u5f55\u5230\u540c\u4e00\u4e2a\u4f1a\u8bdd\u5c31\u884c\u4e86\uff0c\u4e24\u4eba\u5c06\u5171\u4eab\u5c4f\u5e55\u4fe1\u606f\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u6bd4\u8d77\u56fe\u5f62\u5316\u684c\u9762\u5171\u4eab\u8981\u8282\u7701\u4e0d\u5c11\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u6b64\u4f4e\u7f51\u901f\u4e5f\u80fd\u5f88\u597d\u7684\u5de5\u4f5c\u3002\u53e6\u4e00\u4e2a\u597d\u5904\u6765\u6e90\u4e8e tmux \u81ea\u8eab\uff0c\u4e34\u65f6\u767b\u51fa\u548c\u518d\u6b21\u767b\u5165\u7684\u64cd\u4f5c\u5f88\u65b9\u4fbf\u3002</p>"},{"location":"cs/tool/tmux/#_3","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u63a8\u8350\u7528\u5fc3\u5236\u4f5c\u7684 .tmux\u3002\u5728\u5b89\u88c5 tmux \u540e\uff0c\u76f4\u63a5\u4f7f\u7528\u8fd9\u4efd\u914d\u7f6e\u80fd\u7701\u5fc3\u4e0d\u5c11\u3002</p> <p>\u642d\u914d\u4f7f\u7528\uff0c\u5728 .tmux.conf \u91cc\u5c06\u9ed8\u8ba4\u7ec8\u7aef\u6362\u6210 zsh\u3002</p> <pre><code>set -g default-shell /bin/zsh\nset -g default-command /bin/zsh\n</code></pre>"},{"location":"cs/tool/tmux/#-","title":"\u63d2\u4ef6-\u4f1a\u8bdd\u6062\u590d","text":"<p>\u901a\u8fc7 tmux \u4fdd\u7559\u5de5\u4f5c\u73af\u5883\uff0c\u5e2e\u52a9\u56de\u5fc6\u601d\u8def\u3002</p> <ol> <li>\u5b89\u88c5 tmux \u63d2\u4ef6\u7ba1\u7406\u5668 tpm</li> <li>\u5b89\u88c5\u63d2\u4ef6 tmux-resurrect</li> <li>\u4f7f\u7528\u5feb\u6377\u952e<ul> <li><code>&lt;C-a&gt; &lt;C-s&gt;</code> \u4fdd\u5b58</li> <li><code>&lt;C-a&gt; &lt;C-r&gt;</code> \u6062\u590d</li> </ul> </li> </ol>"},{"location":"cs/tool/toolbox/","title":"\u5de5\u5177\u7bb1","text":""},{"location":"cs/tool/toolbox/#_2","title":"\u7f16\u7a0b\u76f8\u5173","text":"\u8bed\u8a00\u8bbe\u8ba1\u5e73\u53f0\u520a\u7269Wikitutorialshortcut <ul> <li>python\uff1apython \u5b98\u65b9\u6587\u6863</li> <li>go\uff1ago \u5b98\u65b9\u6587\u6863</li> <li>lua\uff1alua \u5b98\u65b9\u6587\u6863</li> </ul> <ul> <li>af\uff1aascii \u7ed8\u56fe</li> <li>drawio\uff1a\u539f\u578b\u8bbe\u8ba1\u56fe</li> <li>excalidraw\uff1a\u5728\u7ebf\u5171\u4eab\u624b\u7ed8\u767d\u677f</li> <li>carbon\uff1a\u4ee3\u7801\u7247\u6bb5\u56fe\u7247</li> </ul> <ul> <li>GitHub\uff1a\u5728\u7ebf\u8f6f\u4ef6\u6e90\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u5e73\u53f0</li> <li>stackoverflow\uff1a\u7f16\u7a0b\u6280\u672f\u95ee\u9898\u7f51\u7ad9</li> <li>Cloudflare\uff1a\u5168\u7403\u6027\u4e91\u5e73\u53f0</li> <li>kaggle\uff1a\u6570\u636e\u5efa\u6a21\u4e0e\u6570\u636e\u5206\u6790\u5e73\u53f0</li> </ul> <ul> <li>HelloGithub \u6708\u520a\uff1a\u5206\u4eab GitHub \u4e0a\u6709\u8da3\u3001\u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee</li> <li>\u79d1\u6280\u7231\u597d\u8005\u5468\u520a\uff1a\u503c\u5f97\u5206\u4eab\u7684\u79d1\u6280\u5185\u5bb9</li> </ul> <ul> <li>wiki\uff1a\u7ef4\u57fa\u767e\u79d1</li> <li>arch wiki\uff1aArch Linux \u6587\u6863</li> </ul> <ul> <li>./missing-semester\uff1a\u8ba1\u7b97\u673a\u6559\u80b2\u4e2d\u7f3a\u5931\u7684\u4e00\u8bfe</li> </ul> <ul> <li>chrome \u952e\u76d8\u5feb\u6377\u952e</li> <li>vscode \u952e\u76d8\u5feb\u6377\u952e</li> </ul>"},{"location":"cs/tool/toolbox/#_3","title":"\u5efa\u7ad9\u5de5\u5177","text":"\u56fe\u6807\u5b57\u4f53\u914d\u8272\u56fe\u7247 <ul> <li>FontAwesome\uff1a\u53ef\u7f29\u653e\u77e2\u91cf\u56fe\u6807</li> <li>git-commit-emoji-cn\uff1agit \u63d0\u4ea4\u56fe\u6807</li> <li>emoji\uff1aGitHub emoji \u5927\u5168</li> </ul> <ul> <li>\u4e2d\u6587\u7f51\u5b57\u8ba1\u5212\uff1a\u4e3a\u4e2d\u6587\u7f51\u7ad9\u5f00\u53d1\u8005\u63d0\u4f9b\u7f8e\u4e3d\u5b57\u4f53</li> <li>Google Fonts\uff1aOpen Source and Free Fonts</li> </ul> <ul> <li>\u4e2d\u56fd\u8272\uff1a\u4f20\u7edf\u989c\u8272\u6570\u5b57\u5316</li> <li>Color Hunt\uff1a\u914d\u8272\u65b9\u6848</li> </ul> <ul> <li>pixabay\uff1a\u65e0\u7248\u6743\u56fe\u7247\u5e93</li> <li>tinypng\uff1a\u56fe\u7247\u538b\u7f29</li> <li>jsDelivr\uff1a\u5f00\u6e90\u6587\u4ef6\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\u670d\u52a1</li> </ul>"},{"location":"cs/tool/toolbox/#_4","title":"\u8d44\u6e90\u4fe1\u606f","text":"\u793e\u533a\u535a\u5ba2\u56fe\u4e66\u5a92\u4f53\u4fe1\u606f\u805a\u5408 <ul> <li>Hacker News\uff1a\u6ee1\u8db3\u4e00\u4e2a\u4eba\u6c42\u77e5\u6b32\u7684\u5e73\u53f0</li> <li>Show HN\uff1a\u4e2d\u6587\u7248\u5b9e\u65f6\u8ffd\u8e2a Hacker News</li> <li>v2ex\uff1a\u521b\u610f\u5de5\u4f5c\u8005\u793e\u533a</li> </ul> <ul> <li>Randy Lu\uff1a\u6280\u672f\u521b\u9020\u4ef7\u503c</li> <li>\u9177\u58f3\uff1a\u4eab\u53d7\u7f16\u7a0b\u548c\u6280\u672f\u6240\u5e26\u6765\u7684\u5feb\u4e50 - Coding Your Ambition</li> <li>\u4e91\u98ce\uff1alua &amp; c</li> </ul> <ul> <li>HackerNews Readings\uff1aNLP \u548c\u6df1\u5ea6\u5b66\u4e60\u6c47\u603b Hacker News \u8bc4\u8bba\u4e66\u7c4d</li> <li>Hacker News Books\uff1aHacker News \u56fe\u4e66\u5468\u62a5</li> <li>Z-Library\uff1a\u5f00\u653e\u83b7\u53d6\u6587\u4ef6\u5206\u4eab\u8ba1\u5212</li> <li>\u4e66\u683c\uff1a\u5728\u7ebf\u53e4\u7c4d</li> </ul> <ul> <li>YouTube\uff1a\u89c6\u9891\u5206\u4eab\u548c\u641c\u7d22\u5e73\u53f0</li> <li>language REACTOR\uff1a\u8bed\u8a00\u5b66\u4e60\u5de5\u5177\u7bb1</li> <li>you-get\uff1a\u5a92\u4f53\u5185\u5bb9\u4e0b\u8f7d</li> </ul> <ul> <li>RSSHub Rader\uff1aRSS \u5feb\u901f\u53d1\u73b0\u5e76\u8ba2\u9605</li> <li>Feedly Notifier\uff1a\u8ba2\u9605\u9605\u8bfb\u5668\u6269\u5c55</li> <li>\u7b80\u60a6\uff1a\u7f51\u9875\u526a\u85cf\u4e3a Markdown</li> <li>cubox\uff1a\u8de8\u5e73\u53f0\u7f51\u9875\u6536\u85cf</li> </ul>"},{"location":"cs/tool/toolbox/#_5","title":"\u79d1\u7814","text":"\u8bba\u6587 <ul> <li>sci-hub\uff1a\u5feb\u901f\u67e5\u9605\u79d1\u5b66\u671f\u520a\u6587\u7ae0</li> <li>arxiv\uff1a\u8bba\u6587\u9884\u5b9a\u672c\u6570\u636e\u5e93</li> </ul>"},{"location":"cs/tool/vim/","title":"Vim","text":"<p>Quote</p> <p>\u9f20\u6807\u6b63\u5728\u62d6\u6162\u4f60\u7684\u901f\u5ea6\uff01</p>"},{"location":"cs/tool/vim/#_1","title":"\u57fa\u7840\u7528\u6cd5","text":"<p>\u65b0\u624b\u76f4\u63a5\u8ddf\u7740 vim \u81ea\u5e26\u7684 <code>vimtutor</code> \u7ec3\u4e60\u4e00\u6b21\uff0c\u5927\u6982\u82b1\u8d39 20 \u5206\u949f\u3002</p> <p>\u6bcf\u4e2a\u7ec3\u4e60\u7684\u6700\u540e\uff0c\u8fd8\u4f1a\u7ed9\u51fa\u603b\u7ed3\u3002</p>"},{"location":"cs/tool/vim/#_2","title":"\u5b9a\u5236","text":"<p>Warning</p> <p>\u4e0d\u8981\u8fc7\u5ea6\u5b9a\u5236\uff0c\u907f\u514d\u5411 vimrc \u4e2d\u6dfb\u52a0\u8fc7\u591a\u7684\u4e1c\u897f\uff0c\u591a\u5173\u6ce8\u6838\u5fc3\u529f\u80fd</p>"},{"location":"gm/katana-zero/","title":"Katana Zero","text":"<p>\u611f\u89c9\u50cf\u662f\u770b\u4e86\u4e00\u573a\u7535\u5f71\u3002</p> <p>\u73a9\u6cd5\u4e0a\uff0c\u52a0\u901f\u65f6\u95f4\u548c\u5200\u5288\u5b50\u5f39\u53cd\u5f39\u8fd8\u662f\u5f88\u5e05\u7684\uff0c\u5f88\u6709\u8da3\u7684\u4e00\u70b9\u662f\u6bcf\u4e2a\u5173\u5361\u6b63\u5f0f\u5f00\u59cb\u524d\uff0c\u4e3b\u89d2\u4f1a\u6253\u5f00\u968f\u8eab\u97f3\u8f68\uff0c\u5e26\u7740 BGM \u8fc7\u4e94\u5173\u3001\u65a9\u516d\u5c06\uff0c\u4e3b\u6253\u7684\u5c31\u662f\u4e00\u4e2a\u9177\u3002</p> <p>\u6218\u6597\u4e0a\uff0c\u57fa\u672c\u4e0a\u9760\u89c2\u5bdf\u548c\u591a\u6b7b\u51e0\u5341\u56de\u5c31\u80fd\u8fc7\uff0c\u5728\u6253\u7684\u8fc7\u7a0b\u4e2d\u6709\u51e0\u4e2a\u6574\u4f53\u6d41\u7a0b\u6bd4\u8f83\u957f\u7684\u70b9\uff0c\u6b7b\u4e00\u6b21\u5c31\u91cd\u5934\u6765\uff0c\u8fd8\u662f\u5f88\u5403\u5fc3\u6001\u7684\uff0c\u8981\u662f\u80fd\u518d\u653e\u4e2a\u4e2d\u95f4\u65d7\u5b50\u5c31\u597d\u4e86\u3002</p> <p>\u80cc\u666f\u6545\u4e8b\u5e76\u6ca1\u6709\u597d\u597d\u770b\uff0c\u5927\u81f4\u5c31\u662f\u6d89\u53ca\u5230\u653f\u5e9c\u79d8\u5bc6\u7814\u7a76\u3001\u6740\u624b\u3001\u8fdd\u7981\u836f\u7269\u3001\u7cbe\u795e\u5e7b\u89c9\u4e4b\u7c7b\u7684\u3002\u6574\u4f53\u7684\u53cd\u4e4c\u6258\u90a6\u548c\u8d5b\u535a\u611f\u6c1b\u56f4\u5f88\u5f3a\u3002\u6b64\u5916\uff0c\u6709\u4e9b\u60c5\u8282\u7565\u5fae\u9ed1\u6697\u800c\u8840\u8165\u3002</p> <p>\u6218\u6597\u97f3\u4e50\u8ddf\u753b\u9762\u548c\u80cc\u666f\u6545\u4e8b\u7684\u5951\u5408\u5ea6\u5f88\u597d\u3002\u67e5\u4e86\u4e0b\u8fd9\u79cd\u97f3\u4e50\uff0c\u5b83\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u6d41\u6d3e\uff0c\u53eb\u505a\u5408\u6210\u6ce2\uff0c\u5e7f\u6cdb\u7528\u4e8e\u52a8\u4f5c\u3001\u79d1\u5e7b\u3001\u6050\u6016\u4e4b\u7c7b\u7684\u9898\u6750\u3002</p> <p>\u70b9\u775b\u4e4b\u7b14\uff0c\u6211\u8ba4\u4e3a\u662f\u4e3b\u89d2\u548c\u5c0f\u5973\u5b69\u7684\u6e29\u99a8\u65e5\u5e38\u4e86\u3002\u7d27\u5f20\u7684\u6218\u6597\uff0c\u4e00\u6b21\u6b21\u6b7b\u4ea1\u91cd\u6765\uff0c\u4ece\u5357\u5929\u95e8\u4e00\u76f4\u780d\u5230\u84ec\u83b1\u4e1c\u8def\uff0c\u5982\u679c\u6ca1\u6709\u56de\u5bb6\u7f13\u51b2\u4e0b\uff0c\u4f30\u8ba1\u6211\u5728\u7b2c\u4e09\u7ae0\u5c31\u5f03\u4e86\u3002</p> <p>\u4e3b\u9898\u66f2 Rain on brick \u5f88\u68d2\uff0c\u6bcf\u6b21\u56de\u5bb6\u4ee5\u53ca\u89c1\u5230\u5c0f\u5973\u5b69\u90fd\u4f1a\u64ad\u653e\u8fd9\u9996\u94a2\u7434\u66f2\uff0c\u7a7a\u7075\u3001\u5b89\u9759\u3001\u89e3\u538b\u3002</p> <p>\u9644\u4e0a\u4e00\u5f20\u5408\u5f71\uff1a </p>"},{"location":"gm/the-maze-detective/","title":"The Maze Detective","text":"<p>\u753b\u9762\u5143\u7d20\u6781\u5176\u4e30\u5bcc\uff0c\u57fa\u672c\u4e0a\u8ff7\u5bab\u7684\u5404\u4e2a\u89d2\u843d\u90fd\u585e\u6ee1\u4e86\u4eba\u7269\u3001\u7269\u54c1\uff0c\u800c\u4e14\u4e0d\u5c11\u90fd\u53ef\u4e92\u52a8\u3002</p> <p>\u73a9\u6cd5\u53ef\u4ee5\u8bf4\u662f\u6563\u6b65\uff0c\u535a\u7269\u9986\u3001\u72c2\u6b22\u8857\u3001\u95f9\u5e02\u533a\u3001\u70ed\u6c14\u7403\u57ce\u5821\u3001\u68ee\u6797\u5c0f\u57ce\u3001\u8be1\u5f02\u5e84\u56ed\u3001\u9057\u5fd8\u4e4b\u90fd\u3001\u7e41\u5fd9\u7684\u6e2f\u53e3\u3001\u5730\u4e0b\u5e02\u573a\u3001\u6700\u540e\u7684\u5de8\u578b\u8ff7\u5bab\u3002\u55ef\uff0c\u4e00\u5171\u8fd9\u5341\u4e2a\u5173\u5361\uff0c\u6bcf\u4e2a\u5173\u5361\u4f1a\u8ba9\u4f60\u6328\u4e2a\u53bb\u627e\u4e00\u7cfb\u5217\u4eba\u7269\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\uff0c\u8ff7\u5bab\u5185\u7684\u4e00\u4e9b\u5143\u7d20\u4f1a\u66f4\u6539\u72b6\u6001\uff0c\u8ba9\u4e00\u90e8\u5206\u8def\u6d88\u5931\uff0c\u65b0\u7684\u8def\u5f84\u51fa\u73b0\u3002</p> <p>\u573a\u666f\u91cc\u6bcf\u9694\u4e00\u6bb5\u8ddd\u79bb\u6709\u7d2b\u8272\u7bad\u5934\u6307\u5f15\uff0c\u57fa\u672c\u4e0a\u591a\u89c2\u5bdf\u89c2\u5bdf\u5c31\u80fd\u8d70\u5bf9\u3002\u4e0d\u8fc7\u8d70\u9519\u4e86\u4e5f\u6ca1\u5173\u7cfb\uff0c\u4f1a\u6709\u4e00\u4e9b\u6536\u96c6\u5143\u7d20\u548c\u4e92\u52a8\u5c0f\u6e38\u620f\u7b49\u7740\u4f60\u3002\u4e92\u52a8\u4e2d\u9047\u5230\u8fc7\u62ff\u68af\u5b50\u4e0a\u623f\u9876\u7684\u4eba\uff0c\u4ed6\u8bf4\uff0c\u6211\u5fd8\u8bb0\u4e3a\u4ec0\u4e48\u722c\u4e0a\u623f\u9876\u4e86\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb\uff0c\u91cd\u8981\u7684\u4e0d\u662f\u7ed3\u679c\uff0c\u800c\u662f\u8fc7\u7a0b\u3002</p> <p>\u540e\u671f\u7684\u8ff7\u5bab\u672c\u8eab\u5728\u8def\u4e0a\u589e\u6dfb\u4e86\u5355\u5411\u901a\u884c\u548c\u5341\u5b57\u8def\u53e3\u7684\u65b9\u5411\u901a\u884c\uff0c\u4ee5\u53ca\u9700\u8981\u5728\u89c4\u5b9a\u65f6\u95f4\u89e6\u53d1\u5e76\u901a\u8fc7\u7684\u811a\u8e0f\u673a\u5173\uff0c\u8fd9\u4e2a\u7a0d\u5fae\u6709\u4e9b\u96be\u5ea6\u3002</p> <p>\u6bcf\u4e2a\u5173\u5361\u90fd\u642d\u914d\u4e86\u5e94\u666f\u7684\u97f3\u4e50\uff0c\u5e76\u4e14\u6309\u7167\u8fdb\u5ea6\u7684\u63a8\u8fdb\uff0c\u540c\u4e00\u573a\u666f\u4e0b\u97f3\u4e50\u7684\u8282\u594f\u662f\u5c42\u5c42\u9012\u8fdb\u7684\uff0c\u8fd9\u5f88\u597d\u5730\u524a\u5f31\u4e86\u8ff7\u5bab\u7c7b\u6e38\u620f\u91cd\u590d\u3001\u5355\u8c03\u7684\u7279\u70b9\u3002\u91cc\u9762\u6700\u559c\u6b22\u7684\u4e00\u6bb5\u662f\u70ed\u6c14\u7403\u57ce\u5821\u7684 BGM - the castle in the south\uff0c\u8282\u594f\u6b22\u5feb\uff0c\u6b65\u8c03\u8f7b\u76c8\u3002 </p> <p>\u6e38\u620f\u7684\u7f3a\u70b9\u662f\u66fe\u7ecf\u5728\u4e00\u5904\u79fb\u52a8\u673a\u5173\u5904\u5361\u4f4f\uff0c\u52a8\u4e0d\u4e86\uff0c\u65e0\u5948\u9000\u51fa\u91cd\u8fdb\u4e86\u4e00\u6b21\u3002emmm\uff0c\u53ea\u6709\u8fd9\u4e2a\u3002</p> <p>\u5728\u7e41\u5fd9\u7684\u6e2f\u53e3\u5173\u5361\u91cc\uff0c\u4e00\u5fc3\u901a\u5173\uff0c\u6574\u4e2a\u8ff7\u5bab\u7a81\u7136\u53d8\u5f97\u67af\u71e5\u65e0\u5473\u4e86\u3002\u53d1\u73b0\u4e0d\u5bf9\u52b2\u540e\uff0c\u8c03\u6574\u5230\u5fd8\u8bb0\u76ee\u7684\uff0c\u6309\u7167\u6307\u5f15\uff0c\u8fb9\u8d70\u8fb9\u73a9\uff0c\u4e50\u8da3\u53c8\u4e00\u4e0b\u5b50\u56de\u6765\u4e86\u3002\u76f4\u5954\u76ee\u6807\u771f\u7684\u4f1a\u9519\u8fc7\u5f88\u591a\u98ce\u666f\u3002</p> <p>\u73a9\u6e38\u620f\u7684\u5168\u7a0b\uff0c\u4ee4\u6211\u611f\u53f9\u7684\u662f\uff0c\u5f00\u53d1\u56e2\u961f\u90a3\u6ea2\u51fa\u753b\u9762\u7684\u5982\u540c\u5b69\u7ae5\u822c\u65fa\u76db\u7684\u60f3\u8c61\u529b\uff0c\u771f\u662f\u4ee4\u4eba\u7fa1\u6155\uff01</p> <p>\u9644\u4e0a\u4e00\u5f20\u6e38\u73a9\u753b\u9762\uff1a</p> <p></p>"},{"location":"health/","title":"Index","text":""},{"location":"health/vajra/","title":"\u516b\u90e8\u91d1\u521a\u529f","text":""},{"location":"health/vajra/#_2","title":"\u529f\u7406","text":"<p>\u51dd\u7ed3\u4e94\u810f\u4e4b\u6c14\uff0c\u5e26\u52a8\u5468\u8eab\u8109\u7edc\uff0c\u6d3b\u52a8\u5168\u8eab\u7b4b\u9aa8\u6c14\u8840\uff0c\u6253\u9000\u5916\u6765\u75c5\u6c14\u3002</p>"},{"location":"health/vajra/#_3","title":"\u76ee\u5f55","text":""},{"location":"health/vajra/#_4","title":"\u7b2c\u4e00\u90e8 \u53cc\u624b\u63d2\u9876\u5229\u4e09\u7126","text":""},{"location":"health/vajra/#_5","title":"\u7b2c\u4e8c\u90e8 \u624b\u8db3\u524d\u540e\u56fa\u80be\u8170","text":""},{"location":"health/vajra/#_6","title":"\u7b2c\u4e09\u90e8 \u8c03\u7406\u813e\u80a4\u9700\u5355\u4e3e","text":""},{"location":"health/vajra/#_7","title":"\u7b2c\u56db\u90e8 \u5de6\u809d\u53f3\u80ba\u5982\u5c04\u96d5","text":""},{"location":"health/vajra/#_8","title":"\u7b2c\u4e94\u90e8 \u56de\u5934\u671b\u8db3\u53bb\u5fc3\u75be","text":""},{"location":"health/vajra/#_9","title":"\u7b2c\u516d\u90e8 \u4e94\u52b3\u4e03\u4f24\u5411\u540e\u77a7","text":""},{"location":"health/vajra/#_10","title":"\u7b2c\u4e03\u90e8 \u51e4\u51f0\u5c55\u7fc5\u5468\u8eab\u529b","text":""},{"location":"health/vajra/#_11","title":"\u7b2c\u516b\u90e8 \u4e24\u8db3\u987f\u987f\u996e\u55dc\u6d88","text":""},{"location":"others/8-legged/","title":"\u516b\u80a1\u6587","text":""},{"location":"others/leetcode/","title":"leetcode","text":""},{"location":"rw/","title":"\u9605\u8bfb\u5199\u4f5c","text":""},{"location":"rw/email/","title":"\u600e\u4e48\u5199\u90ae\u4ef6","text":"<p>Abstract</p> <ol> <li> <p>\u4e00\u5c01\u90ae\u4ef6\u53ea\u8bf4\u4e00\u4ef6\u4e8b</p> </li> <li> <p>\u90ae\u4ef6\u662f\u4e3a\u4e86\u901a\u77e5\u3001\u5efa\u8bae\u3001\u8c08\u5224\u6216\u662f\u63d0\u51fa\u8bf7\u6c42</p> </li> <li> <p>\u611f\u8c22\u548c\u9053\u6b49\u7684\u90ae\u4ef6\u8fdc\u6ca1\u6709\u5f53\u9762\u6548\u679c\u597d\uff0c\u6124\u6012\u7684\u90ae\u4ef6\u6ca1\u6709\u610f\u4e49</p> </li> </ol>"},{"location":"rw/email/#_2","title":"\u90ae\u4ef6\u7684\u5143\u7d20","text":"<pre><code>To : \u53d1\u7ed9\u8c01\nCc : \u526f\u672c\uff08Carbon Copy\uff09\nBcc : \u5bc6\u4ef6\u526f\u672c\uff08Blind Carbon Copy\uff09\nSubject : \u6807\u9898 - \u5185\u5bb9\u6982\u8981\n\n---\nSalutation : \u6253\u62db\u547c\n\nBody : \u6b63\u6587 - \u4f20\u8fbe\u7684\u6d88\u606f\n\nClosing : \u544a\u522b\n\nSignature : \u7535\u5b50\u7b7e\u540d\nSignature block : \u7535\u5b50\u7b7e\u540d\u9644\u52a0\u4fe1\u606f\n---\n</code></pre>"},{"location":"rw/email/#_3","title":"\u90ae\u4ef6\u7684\u7ea6\u5b9a","text":"\u6c9f\u901a\u5bf9\u8c61\u6807\u9898\u95ee\u5019\u6b63\u6587\u544a\u522b\u7b7e\u540d <p>\u53d1\u90ae\u7bb1\u8bf7\u5148\u5f04\u6e05\u5bf9\u8bdd\u7684\u5bf9\u8c61\uff01</p> <p>To\uff1a\u4ea4\u6d41\u7684\u4eba\uff0c\u8ddf\u4f20\u8fbe\u7684\u6d88\u606f\u76f4\u63a5\u5173\u8054\u7684\u4eba\u3002\u5bf9\u65b9\u901a\u5e38\u9700\u8981\u914d\u5408\u5b8c\u6210\u5de5\u4f5c\uff0c\u4e00\u822c\u662f\u540c\u7ea7\u6216\u4e0b\u7ea7\u3002</p> <p>Cc\uff1a\u544a\u77e5\u7684\u5bf9\u8c61\uff0c\u8ddf\u4f20\u8fbe\u7684\u6d88\u606f\u6ca1\u6709\u76f4\u63a5\u5173\u8054\uff0c\u4f46\u5bf9\u65b9\u5e94\u8be5\u77e5\u9053\u8fd9\u4ef6\u4e8b\u3002\u4e00\u822c\u662f\u76f4\u5c5e\u9886\u5bfc\u3002</p> <p>Bcc\uff1a\u5077\u5077\u544a\u8bc9\u7684\u4eba\uff0cTo \u548c Cc \u4e0d\u77e5\u9053 Bcc \u4e5f\u5728\u8fd9\u91cc\u9762\uff0c\u9664\u975e Bcc \u56de\u590d\u4e86\uff01\u4ee5\u9632\u4e07\u4e00\uff0c\u901a\u5e38\u7528 Forward \u4ee3\u66ff\u3002</p> <p>\u4e5f\u56e0\u4e3a\u90ae\u4ef6\u53ef\u4ee5\u88ab\u8f6c\u53d1\uff0c\u6240\u4ee5\u6700\u597d\u4e0d\u8981\u6d89\u53ca\u79d8\u5bc6\u5185\u5bb9\uff0c\u4e0b\u7b14\u8981\u8c28\u614e\u3002</p> <p>\u5f62\u5f0f\u4e0a\uff0c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u3001\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3001\u91cd\u8981\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199\u3002\u8fde\u8bcd and\u3001but\uff0c\u4ecb\u8bcd by\u3001in\u3001of\u3001so\uff0c\u51a0\u8bcd the\u3001 a\u3001an\uff0c\u8fd9\u4e9b\u90fd\u662f\u4e0d\u91cd\u8981\u7684\u5355\u8bcd\uff0c\u4e0d\u9700\u8981\u5927\u5199\u3002</p> <p>\u6807\u9898\u8d8a\u7b80\u5355\u8d8a\u597d\uff01\u6700\u68d2\u7684\u6807\u9898\u5c31\u662f\uff0c\u5bf9\u65b9\u53ea\u770b\u6807\u9898\u5c31\u77e5\u9053\u4f60\u7684\u6b63\u6587\u5927\u6982\u8bf4\u4e86\u4ec0\u4e48\u4e86\uff01\u6bd4\u5982 GitHub \u4e0a\u7684\u5f00\u53d1\u8005\u4f1a\u5728 Issue \u6807\u9898\u6700\u524d\u9762\u6807\u6ce8 WIP\u3002</p> <p>Example</p> <p>Suggestion for Your Presentation.</p> <p>Answer to Your Questions about Pricing Plans.</p> <p>2 Ideas to Slove the Issue.</p> <p>Fixup Software Bug.</p> <p>\u5f62\u5f0f\u4e0a\uff0c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u548c\u540e\u9762\u6240\u6709\u540d\u8bcd\uff0c\u5b83\u4eec\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u90fd\u8981\u5927\u5199\uff0c\u95ee\u5019\u8bed\u540e\u9762\u7a7a\u4e00\u884c\u3002</p> <ul> <li>\u5192\u53f7\uff08\uff1a\uff09\u901a\u5e38\u66f4\u6b63\u5f0f\uff0c\u7528\u5728\u516c\u53f8\u3001\u5b66\u6821\u3001\u793e\u533a\u3001\u6216\u66f4\u9ad8\u804c\u4f4d\u7684\u4eba\u4e0a\u9762\u3002</li> <li>\u9017\u53f7\uff08\uff0c\uff09\u901a\u5e38\u66f4\u968f\u610f\uff0c\u7528\u5728\u670b\u53cb\uff0c\u5bb6\u4eba\uff0c\u6216\u662f\u5e73\u5e38\u7ecf\u5e38\u89c1\u5230\u7684\u5173\u7cfb\u6bd4\u8f83\u597d\u7684\u4eba\u4e0a\u9762\u3002</li> </ul> <p>Example</p> <p>Dear Manager:</p> <p>Dear Mom:</p> <p>Hello Ms. Fowier:</p> <p>Hi Steve,</p> <p>Hey Steve, </p> <p>\u5f62\u5f0f\u4e0a\uff0c\u6b63\u6587\u7684\u6bcf\u4e2a\u6bb5\u843d\u7ed3\u675f\u90fd\u8981\u7a7a\u4e00\u884c\u3002</p> <p>\u5185\u5bb9\u4e0a\uff0c\u9075\u4ece KISS \u539f\u5219\uff08keep it short and simple\uff09\uff0c\u4f7f\u6b63\u6587\u5bb9\u6613\u7406\u89e3\uff08clear\uff09\u3001\u7b80\u6d01\uff08consice\uff09\u3001\u793c\u8c8c\uff08polite\uff09\u5e76\u5bcc\u6709\u6210\u6548\uff08productive\uff09\u3002</p> <p>\u5c31\u662f\u8bf4\uff0c\u4e0d\u8981\u8bb2\u5e9f\u8bdd\uff0c\u76f4\u5954\u4e3b\u9898\u3002\u4e5f\u8bb8\u5f00\u59cb\u5199\u7684\u601d\u8def\u662f\u4e71\u7684\uff0c\u4f46\u662f\u6574\u7406\u4e00\u904d\u540e\uff0c\u8ba9\u5bf9\u65b9\u80fd\u77ed\u65f6\u95f4\u5185\u8fc5\u901f\u7406\u89e3\uff01</p> <p>\u56de\u4fe1\uff1a\u901a\u5e38\uff0c\u90ae\u4ef6\u7684\u76ee\u7684\u6027\u5f88\u5f3a\uff0c\u56e0\u6b64\uff0c\u7b80\u5355\u7684\u5bd2\u6684\u540e\uff0c\u8bf7\u76f4\u63a5\u4e86\u5f53\u5730\u8fdb\u5165\u4e0b\u4e00\u4e2a\u90ae\u4ef6\u5faa\u73af\u3002</p> <p>Example</p> <p>Thank you for the information you provided.</p> <p>Thank you for responding to my request so quickly.</p> <p>Thank you for your prompt reply.</p> <p>Thank you for your time.</p> <p>\u5f62\u5f0f\u4e0a\uff0c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\uff0c\u544a\u522b\u8bed\u540e\u9762\u7a7a\u4e00\u884c\u3002</p> <p>Example</p> <p>Best regards,</p> <p>Sincerely, </p> <p>Thank you, </p> <p>Best, </p> <p>Yours truly, </p> <p>Respectfully,</p> <p>Take care,</p> <p>\u7b7e\u540d\u4e00\u822c\u662f\u4f60\u7684\u793e\u4ea4\u59d3\u540d\uff0c\u771f\u540d\u3001\u7b14\u540d\u3001\u4ee3\u53f7\u7b49\u3002\u7535\u5b50\u7b7e\u540d\u4e0d\u9700\u8981\u7b7e\u540d\u548c\u9017\u53f7\u3002</p> <p>\u7b7e\u540d\u5757\u662f\u53ef\u9009\u7684\uff0c\u5305\u62ec\u53d1\u4ef6\u4eba\u7684\u8054\u7cfb\u4fe1\u606f\uff0c\u7f51\u7ad9\u3001\u793e\u4ea4\u4fe1\u606f\u6216\u4e13\u4e1a\u8054\u7cfb\u4fe1\u606f\u3002</p> <p>Example</p> <p>Bill Smith</p> <p>xxxx-xxxx</p> <p>President, Company Name</p> <p>505 Main St.</p> <p>xxxx@xxx.com</p>"},{"location":"rw/email/#_4","title":"\u793a\u4f8b","text":""},{"location":"rw/email/#_5","title":"\u53c2\u8003","text":"<ul> <li>https://youtu.be/fSHQ-oi3pDc?si=KS3H8zxkDsFjb2Aw</li> <li>https://youtu.be/moIucWGgvMc?si=wkLEE-a080c94rrn</li> <li>https://youtu.be/3Tu1jN65slw?si=PxEdlyJl5Tucyhoh</li> </ul>"},{"location":"sw/","title":"Index","text":""},{"location":"sw/aseprite/","title":"Aseprite","text":"\u5de5\u5177\u680f\u56fe\u5c42\u8c03\u8272\u677f <ul> <li>Pen [B]</li> <li>Line [L]</li> <li>Shape [U]</li> <li>Contour [D]</li> <li>Eraser [E]</li> <li>EyeDropper [Alt]</li> <li>Point Bucket [G]</li> <li>Selection [M] or [W]</li> </ul> <ul> <li>Properties</li> <li>New Layer [Shift N]</li> <li>Remove Layer</li> <li>Duplicate</li> <li>Merge Down</li> </ul> <ul> <li>Palette Editor [F4]</li> </ul>"}]}